tool_category_by_arsenal,tool_name,tool_description,tool_categories,tool_sessions,tool_code,tool_link_path,stars_count,forks_count,watchers_count,releases_count,size_KB,commit_total_number,last_commit_date,first_commit_date,maintenance_period_days,commit_number_2010_2011,commit_number_2011_2012,commit_number_2012_2013,commit_number_2013_2014,commit_number_2014_2015,commit_number_2015_2016,commit_number_2016_2017,commit_number_2017_2018,commit_number_2018_2019,issues_all_count,issues_open_count,issues_closed_count,pr_all_count,pr_open_count,pr_closed_count,languages,requirements_txt
code_assessment,OWASP dependency-check,"Dependency-Check is a Software Composition Analysis tool that identifies project dependencies and checks if there are any known, publicly disclosed, vulnerabilities. The tool can be part of a solution to the [OWASP Top 10 2017 A9:2017-Using Components with Known Vulnerabilities](https://www.owasp.org/index.php/Top_10-2017_Top_10).","* Code Assessment
* Software Composition Analysis",usa/2018 usa/2015 usa/2014 usa/2013,https://github.com/jeremylong/DependencyCheck,/jeremylong/DependencyCheck,1915,535,1915,0,129996,6266,2019-10-20T11:50:39,2012-09-07T02:54:16,2599,0,0,99,966,1465,1218,550,789,758,2273,279,1994,739,6,733,"{'Java': 2510081, 'JavaScript': 1149733, 'CMake': 427624, 'M4': 66845, 'Ruby': 25706, 'Groovy': 22516, 'TSQL': 9556, 'Shell': 7506, 'Python': 7490, 'PLSQL': 4213, 'C': 3939, 'SQLPL': 3202, 'Dockerfile': 2787, 'C++': 2713, 'Swift': 1221, 'Cuda': 384, 'Batchfile': 287}",
code_assessment,Puma Scan,"Puma Scan is a software security Visual Studio analyzer extension built on top of Roslyn, the open-source .NET Compiler Platform. Puma Scan provides real time, continuous source code analysis as development teams write code. Vulnerabilities are immediately displayed in the development environment as spell check and compiler warnings, preventing security bugs from entering your applications. Simply install the plugin / NuGet package and find the following vulnerability patterns:* Command Injection (SQL, LDAP, OS Commands)* Cross-Site Scripting* Cross-Site Request Forgery* Insecure Cryptography* Insecure Password Management* Unvalidated Redirect* Weak Validation* Directory Traversal* Missing Certificate Validation","* Code Assessment
* Static Analysis
* .NET Security",asia/2017 usa/2017,https://github.com/pumasecurity/puma-scan,/pumasecurity/puma-scan,327,64,327,7,1236,102,2019-08-08T14:25:44,2016-10-19T23:02:06,1022,0,0,0,0,0,0,9,29,43,61,20,41,7,0,7,"{'C#': 499139, 'PowerShell': 3303, 'Shell': 1375, 'Dockerfile': 434}",
cryptography,Hashview,Hashview is a web front-end to hashcat with many powerful features geared towards penetration testers. Leverage task automation and real-time analytics for increased results and fancy reports.,"* Cryptography
* Penetration Testing
* Reporting",usa/2017,https://github.com/hashview/hashview,/hashview/hashview,546,121,546,5,4446,1381,2018-11-20T18:13:59,2016-07-28T07:09:22,845,0,0,0,0,0,0,577,576,228,475,50,425,311,4,307,"{'CSS': 920405, 'Ruby': 251128, 'HTML': 172501, 'JavaScript': 64191, 'Shell': 38}",
cryptography,Thalos: Simple and Secure approach to file storage in untrusted environments,"Thalos is a secure and distributed system for file storage in untrusted environments. Thalos design makes it impossible for anyone who has physical or virtual access to the servers to decrypt files without the right key and neither to establish a connection between one file and its owner. Thalos relies on local elaborations to perform encryption. Furthermore, a smart and ""hierarchical"" key management system makes it quick and simple to use for everyone who has an internet access.",* Cryptography,europe/2017,https://github.com/ecleipteon/Thalos,/ecleipteon/Thalos,30,4,30,0,1404,59,2019-03-26T02:14:49,2017-09-06T17:02:54,565,0,0,0,0,0,0,0,56,1,9,7,2,1,0,1,"{'JavaScript': 61311, 'HTML': 27654, 'CSS': 6174}",
cryptography,WhatsYourSign,"Verifying a file's cryptographic signature can deduce its origin or trustability. Unfortunately on OS X there is no simple way to view a file's signature from the UI.WhatsYourSign adds a menu item to Finder.app. Simply right-, or control-click on any file to display its cryptographic signing information!<p align=""center""><img src=""https://objective-see.com/images/WYS/whatsYourSign.png""></p>Full details and usage instructions can be found [here](https://objective-see.com/products/whatsyoursign.html).","* Cryptography
* Malware Research",europe/2017,https://github.com/objective-see/WhatsYourSign,/objective-see/WhatsYourSign,96,13,96,0,666,12,2018-05-08T17:30:56,2017-12-21T23:51:31,137,0,0,0,0,0,0,0,5,7,7,7,0,1,1,0,{'Objective-C': 143223},
exploitation,AVET,"AVET is an AntiVirus Evasion Tool, which was developed for making life easier for pentesters and for experimenting with antivirus evasion techniques.What & Why:- When running an exe file made with msfpayload & co, the exe file will often be recognized by the antivirus software- AVET is a antivirus evasion tool targeting windows machines- The techniques used in avet evaded most antivirus suites, including MS Defender, McAfee, Sophos, Avira and more- AVET includes two tools, avet.exe with different antivirus evasion techniques and make_avet for compiling a preconfigured binary file- For encoding the shellcode the tools format.sh and sh_format are included- AVET is tested with Kali 2 and tdm-gcc- Interactive assistant for easier usage- Support for 64bit payloads- The metasploit psexec module can be used","* Exploitation
* Vulnerability assessment
* Ethical Hacking",asia/2017 usa/2017 usa/2018,https://github.com/govolution/avet,/govolution/avet,1000,280,1000,0,551,424,2019-07-25T14:24:44,2017-01-28T14:56:47,907,0,0,0,0,0,0,0,77,171,25,0,25,6,0,6,"{'C': 94842, 'Shell': 88151, 'C++': 5004, 'Python': 2329}",
exploitation,Commix,"**Commix** (short for [**comm**]and [**i**]njection e[**x**]ploiter)  is an automated tool that can be used from web developers, penetration testers or even security researchers in order to test web-based applications with the view to find bugs, errors or vulnerabilities related to command injection attacks. By using this tool, it is very easy to find and exploit a command injection vulnerability in a certain vulnerable parameter or HTTP header.","* Exploitation
* Vulnerability Assessment",europe/2015,https://github.com/commixproject/commix,/commixproject/commix,2101,499,2101,28,4441,1399,2019-10-18T04:58:53,2015-03-20T08:58:16,1672,0,0,0,0,0,371,372,247,242,495,7,488,21,0,21,{'Python': 1028782},
exploitation,GEF - GDB Enhanced Features,"`GEF` is a kick-ass set of GDB commands for X86, ARM, MIPS, PowerPC and SPARC to make GDB cool again for exploit dev. It is aimed to be used mostly by exploiters and reverse-engineers, to provide additional features to GDB using the Python API to assist during the process of dynamic analysis and exploit development.It has full support for both Python2 and Python3 indifferently (as more and more distros start pushing gdb compiled with Python3 support).","* Exploitation
 * Reverse-Engineering
 * Debugging
 * Capture-The-Flag",usa/2017,https://github.com/hugsy/gef,/hugsy/gef,2435,346,2435,4,4672,1696,2019-10-07T18:50:47,2015-03-26T22:22:32,1655,0,0,0,0,0,118,493,612,395,469,29,440,200,8,192,"{'Python': 396941, 'C': 5374, 'Shell': 3474, 'Makefile': 1569, 'Dockerfile': 611}","capstone==3.0.5.post1
keystone-engine==0.9.1.post3
pylint==2.3.0
ropper==1.11.6
unicorn==1.0.1"
exploitation,Leviathan Framework,"Leviathan is a mass audit toolkit which has wide range service discovery, brute force, SQL injection detection and running custom exploit capabilities. It consists open source tools such masscan, ncrack, dsss and gives you the flexibility of using them with a combination.The main goal of this project is auditing as many system as possible in country-wide or in a wide IP range.",* Exploitation,usa/2017,https://github.com/leviathan-framework/leviathan,/leviathan-framework/leviathan,805,197,805,3,1370,35,2018-10-03T15:40:47,2017-04-26T17:29:00,524,0,0,0,0,0,0,0,32,3,15,2,13,5,0,5,"{'Python': 94816, 'Shell': 1002}","paramiko
shodan
bs4
lxml
google-api-python-client
requests"
exploitation,MailSniper,"MailSniper is a PowerShell-based penetration testing tool whose primary purpose is to search through email in a Microsoft Exchange environment for specific terms (i.e. passwords, insider intel, network architecture information, etc.). It can be used as a non-administrative user to search their own email, or by an Exchange administrator to search the mailboxes of every user in a domain.MailSniper includes additional modules for attacking externally-facing Outlook Web Access (OWA) and Exchange Web Services (EWS) portals. With MailSniper, it is also possible to: perform password spraying attacks, enumerate internal domain names and usernames, locate inboxes with too broad permissions, and gather the Global Address List containing all email addresses of users at an organization from OWA and EWS.","* Exploitation
* Network Attacks",usa/2017,https://github.com/dafthack/MailSniper,/dafthack/MailSniper,1235,269,1235,0,3176,92,2018-11-20T18:17:52,2016-09-08T00:36:51,803,0,0,0,0,0,0,69,21,2,80,26,54,40,9,31,{'PowerShell': 665130},
exploitation,Rattler,Rattler is a tool that automates the identification of DLL's which can be used for DLL preloading attacks. Rattler enumerates an EXE's DLL's at runtime and provides a list of vulnerable DLL's which can be exploited for a preloading attack against the target application.,"* Exploitation
* Ethical Hacking
* Vulnerability assessment",usa/2017,https://github.com/sensepost/rattler,/sensepost/rattler,284,91,284,1,291,18,2017-08-11T09:57:26,2016-11-28T12:56:32,255,0,0,0,0,0,0,13,5,0,7,3,4,4,2,2,{'C++': 18662},
exploitation,Windows RID Hijacking Attack,"The RID Hijacking is a post-exploitation vector which allows stealthy persistence on **all Windows versions**. By using only OS resources,this attack will create an entry on the target by modifying some properties of an existing account. It will change the account attributes by setting a Relative Identifier (RID), which should be owned by one existing account on the destination machine.Taking advantage of some Windows Local Users Management integrity issues, this hook will allow to authenticate with one known account credentials (like GUEST account), and access with the privileges of another existing account (like ADMINISTRATOR account), even if the spoofed account is _*disabled*_.","* Windows Persistence
* Post Exploitation
* Ethical Hacking",usa/2018,https://github.com/r4wd3r/RID-Hijacking,/r4wd3r/RID-Hijacking,106,30,106,0,1206,29,2019-06-03T01:11:39,2018-07-14T18:48:52,323,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,"{'PowerShell': 36324, 'Python': 9974, 'Ruby': 5997}",
forensics,[inVtero.net](https://github.com/ShaneK2/inVtero.net),"inVtero.net: A high speed (Gbps) Forensics, Memory integrity & assurance. Includes offensive & defensive memory capabilities.Find/Extract processes, hypervisors (including nested) in memory dumps using microarchitechture independent Virtual Machiene Introspectiontechniques Supports: VMWare (client/servers), XEN and physical systems (PAGEDUMP).","* Forensics
* Debugger (Passive memory debugging/hacking)
* Malware HIDS (Integrity Monitoring) 
* Reverse Engineering",usa/2017,https://github.com/ShaneK2/inVtero.net,/ShaneK2/inVtero.net,209,51,209,8,92255,181,2017-11-26T17:38:38,2011-04-29T04:43:40,2403,0,3,0,0,0,39,50,89,0,7,1,6,5,0,5,"{'C#': 899465, 'Python': 48277, 'PowerShell': 11084, 'Shell': 5355}",
forensics,Userline,"This tool automates the process of creating logon relations from MS Windows Security Events by showing a graphical relation among users domains, source and destination logons, session duration, who was logged on the systems in a given datetime, session hijacking, etc. It is also able to integrate with 3rd party tools and provides different output modes such as CSV output, Neo4j, Timesketch, JSON, SQLite, Gephi and Graphviz.","* Data Forensics
* Incident Response",usa/2017 asia/2018,https://github.com/thiber-org/userline,/thiber-org/userline,210,31,210,1,641,117,2018-03-25T12:46:30,2017-04-17T22:37:08,341,0,0,0,0,0,0,0,115,2,5,1,4,4,1,3,"{'Python': 53304, 'Shell': 442}","elasticsearch-dsl>=5.2.0
neo4j-driver>=1.2.1
python_dateutil>=2.6.0
graphviz>=0.7
redis>=2.10.5"
frameworks,:coffee: CoffeeShot: Avoid Detection with Memory Injection :syringe:,"CoffeeShot is an evasion framework that injects payload from Java-based programs into designated processes on Microsoft Windows.CoffeeShot assists blue team members in assessing the effectiveness of their anti-malware measures against malicious software written in Java. Red team members and pen testers can also use CoffeeShot to bypass the target’s security controls. CoffeShot utilizes JNA (Java Native Access) to inject payload from Java-based programs into designated processes on Microsoft Windows.The memory injection methods that CoffeeShot employs are straightforward and are well-known in the context of traditional, compiled executables. The effectiveness of these techniques at evading AV when they’re implemented in Java, highlights the brittle nature even by modern antivirus tools.","* Frameworks
* Security Testing
* Red Team
* Ethical Hacking
* Post Exploitation",usa/2018,https://github.com/MinervaLabsResearch/CoffeeShot,/MinervaLabsResearch/CoffeeShot,33,7,33,0,17,5,2018-08-06T10:36:12,2018-08-01T13:23:27,4,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,{'Java': 5988},
frameworks,DefPloreX,"An Elasticsearch-based toolkit that our team uses for large-scale processing, analysis and visualization of e-crime records. In particular, we've successfully been applying DefPloreX to the analysis of deface records (e.g., from web compromises); hence its name, Def(acement) eXPlorer (DefPloreX).The full version of DefPloreX includes:  * A thin wrapper to interact with an Elasticsearch backend (included in this release)  * A distributed data-processing pipeline based on Celery (example included in this release)  * An analysis component to extract information from deface web pages  * A features extraction component to produce a compact, numerical and categorical representation of each web page  * A statistical machine-learning component to automatically find groups of similar web pagesThe input to DefPloreX is a feed of URLs describing the deface web pages,including metadata such as the (declared) attacker name, timestamp, reasonfor hacking that page, and so on. Separately, we also have a mirror of theweb pages at the time of compromise.","* OSINT
* Frameworks",usa/2017,https://github.com/trendmicro/defplorex,/trendmicro/defplorex,97,29,97,0,1521,2,2017-07-27T00:33:55,2017-07-06T06:42:22,20,0,0,0,0,0,0,0,2,0,1,0,1,0,0,0,{'Python': 48266},
frameworks,Docker Security Playground:  A Microservices-based framework for the study of network security,"Docker Security Playground is a framework that allows you to: - Create **network and network security scenarios**, in order to understand all the network protocols,  rules, and security issues with host networks. . - Learn **penetration testing techniques** by simulating vulnerability labs scenarios-  **Manage a set of docker-compose project** . Main goal of DSP is to skilling in penetration testing and network security, but his flexibility allows you the **creation**, **graphic editing** and **managment run / stop** of all your **docker-composelabs**.","* Frameworks
* Security Testing
* Red Team
* Ethical Hacking
* Post Exploitation",usa/2018,https://github.com/giper45/DockerSecurityPlayground,/giper45/DockerSecurityPlayground,204,56,204,0,14653,213,2019-10-17T09:36:48,2017-09-19T07:15:19,758,0,0,0,0,0,0,0,38,55,33,11,22,9,0,9,"{'JavaScript': 7106659, 'HTML': 180861, 'CSS': 115366, 'Shell': 9982, 'Dockerfile': 5117, 'Ruby': 1581}",
frameworks,Dradis Framework,"Dradis is an extensible, cross-platform, open source collaboration framework for InfoSec teams. It can import from over 19 popular tools, including Nessus, Qualys, Burp and AppScan. Started in 2007 (this is the 10th year anniversary!), Dradis Framework has been growing ever since (10,000+ commits in the last 12 months). Dradis is the best tool to combine the output of different scanners, add your manual findings and evidence and generate a report with one click.Free forever and open source.","* Collaboration
* Reporting
* Frameworks",europe/2014 usa/2015 usa/2016,https://github.com/dradis/dradis-ce,/dradis/dradis-ce,354,116,354,0,3406,2321,2019-10-09T07:05:37,2016-01-20T12:57:27,1357,0,0,0,0,0,0,625,465,884,527,43,484,427,20,407,"{'Ruby': 608689, 'HTML': 160324, 'CoffeeScript': 66675, 'CSS': 54005, 'JavaScript': 21295, 'Shell': 2259}",
frameworks,Evilgrade,"Evilgrade is a modular framework that allows the user to take advantage of poor upgrade implementations by injecting fake updates. It comes with pre-made binaries (agents), a working default configuration for fast pentests, and has it's own WebServer and DNSServer modules. Easy to set up new settings, and has an autoconfiguration when new binary agents are set.",* Framework,2011,https://github.com/infobyte/evilgrade,/infobyte/evilgrade,928,234,928,4,8020,33,2018-01-24T19:15:25,2013-04-26T16:03:26,1734,0,0,0,6,1,0,20,1,5,27,6,21,2,0,2,"{'Perl': 466402, 'JavaScript': 221135, 'Java': 164195, 'HTML': 34011, 'CSS': 27025, 'PHP': 3626, 'Shell': 2553, 'Perl 6': 566, 'ASP': 96}",
frameworks,Halcyon IDE,"Halcyon is the first IDE specifically focused on Nmap Script (NSE) Development. This research idea was originated while writing custom Nmap Scripts for Enterprise Penetration Testing Scenarios. The existing challenge in developing Nmap Scripts (NSE) was the lack of a development environment that gives easiness in building custom scripts for real world scanning, at the same time fast enough to develop such custom scripts. Halcyon is free to use, java based application that comes with code intelligence, code builder, auto-completion, debugging and error correction options and also a bunch of other features like other development IDE(s) has. This research was started to give better development interface/environment to researchers and thus enhance the number of NSE writers in the information security community.Halcyon IDE can understand Nmap library as well as traditional LUA syntax. Possible repetitive codes such as web crawling, bruteforcing etc., is pre-built in the IDE and this makes easy for script writers to save their time while developing majority of test scenarios.","* Frameworks
* Vulnerability assessment",usa/2016 asia/2016,https://github.com/s4n7h0/Halcyon,/s4n7h0/Halcyon,305,76,305,2,3084,27,2018-08-17T05:50:57,2014-07-09T05:04:56,1500,0,0,0,0,5,0,13,2,7,4,2,2,1,1,0,{'Java': 195214},
frameworks,Kubebot,Kubebot is an automated scalable security testing framework based on a microservice architecture. Requests are sent to an API server which then orchestrates running the tools as Docker containers on a Kubernetes (K8S) backend. These requests are asynchronous i.e. they get dropped in a queue which are then picked up by Subscription workers. The subscription workers start the job of running the tools. The results of running those tools are diff'ed and only the changes are sent back to the fronend.Kubebot uses Slack as the frontend - as a way to send API requests but this can be extended into different frontends as well.Kubebot also gives the flexibility of setting up scheduled job runs using the K8S cronjob.,"* Frameworks
* Security Testing
* BugBounty
* Automation
* Containers",usa/2017,https://github.com/anshumanbh/kubebot,/anshumanbh/kubebot,141,25,141,0,21871,14,2018-06-02T05:34:42,2017-07-11T07:29:27,325,0,0,0,0,0,0,0,12,2,1,0,1,0,0,0,"{'Python': 188641, 'Go': 86699, 'Makefile': 1432, 'Shell': 547}",
hardening,Lynis,"Lynis is a security auditing tool for sytems running Linux, macOS, BSD, and other flavors of Unix. The tool performs an in-depth security scan and runs on the system itself. The primary goal is to test security defenses and provide tips for further system hardening. It will also scan for general system information, vulnerable software packages, and possible configuration issues. As Lynis is written in POSIX shell script, it is light on resources and low on dependencies. This makes the tool great for putting it in build pipelines, running it as part of a forensics task or as penetration testing tool during an assignment.","* Hardening
* Vulnerability assessment",europe/2014 usa/2015 europe/2016,https://github.com/CISOfy/lynis,/CISOfy/lynis,6378,782,6378,48,5661,2652,2019-10-16T12:49:46,2013-12-10T14:00:49,2135,0,0,0,1,327,445,914,296,229,793,32,761,360,5,355,"{'Shell': 1325177, 'Roff': 5730, 'Ruby': 672}",
hardening,Zeus,AWS Auditing & Hardening ToolZeus is a powerful tool for AWS EC2 / S3 / CloudTrail / CloudWatch / KMS best hardening practices. It checks security settings according to the profiles the user creates and changes them to recommended settings based on the CIS AWS Benchmark source at request of the user.,"* Hardening
 * Vulnerability Assessment",nan,https://github.com/DenizParlak/Zeus,/DenizParlak/Zeus,556,74,556,0,233,111,2019-10-03T14:42:36,2017-07-02T17:55:54,822,0,0,0,0,0,0,0,102,5,12,5,7,4,2,2,"{'Shell': 57988, 'Roff': 7, 'HTML': 1}",
hardware_iot,BSODomizer HD,"BSODomizer HD is an open source, FPGA-based, covert electronic device that injects and captures HDMI signals. Currently a proof-of-concept design, this much anticipated follow-up to the original [BSODomizer](http://www.grandideastudio.com/portfolio/bsodomizer) released in 2008 improves on the graphics interception and triggering features, and can capture screenshots of any non-HDCP target up to 1080p resolution. Uses of the tool include penetration testing, video display calibration, mischievous acts, or as a reference design for exploration into the mystical world of FPGAs.","* Hardware
* Red Team",usa/2016,https://github.com/joegrand/bsodomizer-hd-c5g,/joegrand/bsodomizer-hd-c5g,10,1,10,0,4610,29,2016-08-05T07:29:07,2016-05-13T15:55:05,83,0,0,0,0,0,0,29,0,0,0,0,0,0,0,0,"{'SystemVerilog': 980380, 'Verilog': 887620, 'C': 374832, 'Tcl': 244719, 'Shell': 23874, 'HTML': 6851, 'Forth': 5009, 'Mathematica': 780, 'Scheme': 608, 'VHDL': 328}",
hardware_iot,JTAGulator,"JTAGulator is an open source hardware hacking tool that assists in identifying on-chip debug interfaces from test points, vias, or component pads on a target device. The tool can save a tremendous amount of time during reverse engineering, particularly for those who don't have the resources required for traditional processes.","* Hardware
* Reverse engineering
* Vulnerability assessment",usa/2014 europe/2016,https://github.com/grandideastudio/jtagulator,/grandideastudio/jtagulator,228,48,228,0,371,159,2019-10-16T01:07:32,2013-05-04T02:09:39,2355,0,0,0,12,22,39,17,14,51,33,3,30,8,2,6,{'Propeller Spin': 173150},
hardware_iot,OWASP Securetea,"Small IOT (Internet of Things) to notify users via twitter, whenever anyone accessing his laptop. This small application using the touchpad / mouse / wireless mouse and developed in python and tested on a linux.The purpose of this application is to warn the user (on twitter) whenever her laptop accessible. This small application was developed and tested in python in linux machine is likely to work well on the Raspberry Pi as well.",* IOT,asia/2018,https://github.com/owasp-id/SecureTea,/owasp-id/SecureTea,5,0,5,0,261,10,2018-02-18T05:07:54,2017-03-20T10:32:29,334,0,0,0,0,0,0,0,4,6,1,0,1,1,0,1,{'Python': 250170},
hardware_iot,WHID Injector,"Since the first public appearance of HID Attacks, many awesome researches, tools and devices have been released.  
However, Offensive Security folks were always seeking a cheap and dedicated hardware that could be controlled remotely (i.e. over WiFi or BT).
This is how WHID Injector was born. 
WHID stands for WiFi-HID injector, it is an USB-Rubberducky / Bad-USB on steroids, designed to fulfill RedTeamers needs during their engagements.
Based on an Atmega 32u4 (i.e. Keyboard, mouse and serial emulation) and a ESP-12 (i.e. Wifi AP/Client), It can be easily controlled over the WiFi network and potentially bypass air-gapped environments.","* Hardware IoT
* RedTeam",europe/2017,https://github.com/whid-injector/WHID,/whid-injector/WHID,852,133,852,0,13653,93,2019-09-24T06:26:10,2017-03-07T08:57:37,930,0,0,0,0,0,0,0,50,15,49,9,40,5,0,5,"{'C++': 197507, 'Objective-C': 20768, 'HTML': 7876, 'PowerShell': 2514, 'C': 60}",
ics_scada,DYODE,"DYODE (Do Your Own Dyode) is a low cost, DIY data diode aimed at securing Industrial Control Systems. While data diodes have been used for a long time on classified networks, the high cost and complexity of implementation have kept them away from a lot of valid use cases on industrial control systems. During our assignments, we encountered many situations in which time or availability constraints were not really high -but the security risk was- and a commercial data diode way too costly.","* ICS
* Hardware",usa/2017 europe/2017,https://github.com/wavestone-cdt/dyode,/wavestone-cdt/dyode,57,15,57,0,26776,5,2017-10-07T08:05:16,2017-07-20T09:40:13,78,0,0,0,0,0,0,0,5,0,4,1,3,0,0,0,"{'Python': 31464, 'PowerShell': 1314}",
malware_research,FireEye Labs Obfuscated String Solver (FLOSS),"The FireEye Labs Obfuscated String Solver (FLOSS) is an open source tool that automatically detects, extracts, and decodes obfuscated strings in Windows Portable Executable (PE) files. Malware analysts, forensic investigators, and incident responders can use FLOSS to quickly extract sensitive strings to identify indicators of compromise (IOCs). Malware authors encode strings in their programs to hide malicious capabilities and impede reverse engineering. Even simple encoding schemes defeat the ‘strings’ tool and complicate static and dynamic analysis. FLOSS uses advanced static analysis techniques, such as emulation, to deobfuscate encoded strings.FLOSS is extremely easy to use and works against a large corpus of malware. It follows a similar invocation as the ‘strings’ tool. Users that understand how to interpret the strings found in a binary will understand FLOSS’s output. FLOSS extracts higher value strings, as strings that are obfuscated typically contain the most sensitive configuration resources – including C2 server addresses, names of dynamically resolved imports, suspicious file paths, and other IOCs.","* Malware analysis
* Malware research
* Reverse engineering",nan,https://github.com/fireeye/flare-floss,/fireeye/flare-floss,1334,239,1334,9,490,558,2019-10-08T00:54:03,2016-03-04T22:21:50,1312,0,0,0,0,0,0,466,64,20,315,43,272,102,2,100,"{'Python': 139052, 'C': 30498, 'Makefile': 12884}",
malware_research,Malboxes,"Malboxes is a tool to streamline and simplify the creation and management ofvirtual machines used for malware analysis.Building analysis machines is a tedious task. One must have all the propertools installed on a VM such as a specific version of vulnerable software (ie:Flash), Sysinternal tools, debuggers (Windbg), network traffic analyzers(Wireshark), man-in-the-middle tools (Fiddler). One must also avoid leakinghis precious proprietary software licenses (IDA). At the moment, this menialjob is not automated and is repeated by every analyst.Malboxes leverages the DevOps principle of infrastructure as code to enableresearchers to automatically create fully operational and reusable analysismachines. The tool uses Vagrant and Packer to do an initial out-of-bandbootstrapping. Afterward, chocolatey is used to install further toolsbenefiting from the chocolatey package repository.Attendees will learn a simple tool for safe malware analysis practice that iseasy to grasp, enabling them to start doing analysis faster. Seasoned malwareresearchers will also gain from this demo by seeing how the DevOps approachcan be applied to simplify and accelerate their labs' malwarereverse-engineering capacity or reduce its management overhead.",* Malware Research,usa/2017,https://github.com/GoSecure/malboxes,/GoSecure/malboxes,765,107,765,5,518,444,2019-10-18T17:52:25,2015-09-20T01:06:59,1489,0,0,0,0,0,7,133,172,50,134,21,113,60,1,59,"{'Python': 32070, 'PowerShell': 13049, 'JavaScript': 7863, 'Batchfile': 3743, 'Ruby': 3704, 'Shell': 3652, 'Dockerfile': 1859, 'Makefile': 181}","appdirs
Jinja2>=2.9
jsmin
boto3"
malware_research,Proc Info Lib,"Proc Info is an open-source, user-mode, process library for macOS. It provides simple interface to retrieve detailed information about running processes, plus allows one to asynchronously monitor process creation & exit events.Using this library, one can track processes during [malware analysis](https://speakerdeck.com/patrickwardle/fruitfly-via-a-custom-c-and-c-server?slide=17) or during [bug hunting](https://speakerdeck.com/patrickwardle/defcon-2017-death-by-1000-installers-its-all-broken?slide=20).","* Malware Research
* Exploitation
* Hardening",usa/2017,https://github.com/objective-see/ProcInfo,/objective-see/ProcInfo,255,36,255,0,4305,37,2019-02-11T03:36:36,2017-08-07T04:01:03,552,0,0,0,0,0,0,0,19,17,5,3,2,3,1,2,"{'Objective-C': 62117, 'C': 880}",
malware_research,SniffMK,SniffMK is a simple utility designed to sniff mouse and keyboard events on macOS. It is based on code from Amit Singh's [website](http://osxbook.com)SniffMK was designed to facilitate malware analysis (specifically OSX/FruitFly which can simulate both mouse and keyboard events) See BlackHat/DefCon [slides](https://speakerdeck.com/patrickwardle/fruitfly-via-a-custom-c-and-c-server?slide=18) for details.,* Malware Research,usa/2017,https://github.com/objective-see/sniffMK,/objective-see/sniffMK,135,28,135,0,12,7,2017-09-01T01:57:40,2017-08-18T21:40:19,13,0,0,0,0,0,0,0,7,0,2,1,1,1,0,1,{'Objective-C': 10621},
mobile_hacking,Android Tamer,"Android Tamer project provides various resources for Android mobile application and device security reviews. Be it pentesting, malware analysis, reverse engineering or device assessment. We strive to solve some of the major pain points in setting up the testing environments by providing various ways and means to perform the task in most effortless manner possible.","* Mobile Security
* Vulnerability assessment
* Penetration Testing",europe/2015 usa/2016 usa/2017,https://github.com/AndroidTamer/AndroidTamer,/AndroidTamer/AndroidTamer,66,17,66,0,3,5,2017-10-25T06:32:00,2017-02-19T08:03:45,247,0,0,0,0,0,0,0,5,0,7,6,1,0,0,0,{},
mobile_hacking,BadIntent,"BadIntent integrates Android's Binder framework with Burp Suite. It enables pentesters to use the typical Burp Suite workflow and all of its tools and extensions. BadIntent helps in identifying vulnerabilities, makes AIDL-attacks more easy to perform and assists in attacks against backends. Since Binder transactions are hooked, it is possible to analyze, interrupt, modify and repeat most communication channels and exchanged messages. This can be used for reverse engineering and obfuscation bypass activities.","* Mobile Security
* Penetration Testing
* Reverse Engineering",usa/2017,https://github.com/mateuszk87/BadIntent,/mateuszk87/BadIntent,274,54,274,1,3792,20,2017-08-20T20:31:24,2017-07-17T18:01:59,34,0,0,0,0,0,0,0,20,0,8,6,2,0,0,0,{'Java': 111610},
mobile_hacking,Kwetza,Kwetza is a tool that allows you to infect an existing Android application with a Meterpreter payload. Kwetza allows you to infect Android applications using the target application's default permissions or inject additional permissions to gain additional functionality.,"* Mobile Security
* Mobile Malware",usa/2017,https://github.com/sensepost/kwetza,/sensepost/kwetza,468,215,468,0,34,26,2017-11-14T12:40:06,2016-09-23T09:35:33,417,0,0,0,0,0,0,8,18,0,41,18,23,5,1,4,"{'Smali': 46594, 'Python': 12619}",
mobile_hacking,MobSF,"Mobile Security Framework (MobSF) is an intelligent, all-in-one open source mobile application (Android/iOS/Windows) automated pen-testing framework capable of performing static and dynamic analysis. It can be used for effective and fast security analysis of Android, iOS and Windows mobile Applications and supports both binaries (APK, IPA & APPX ) and zipped source code. MobSF can also perform Web API Security testing with it's API Fuzzer that can do Information Gathering, analyze Security Headers, identify Mobile API specific vulnerabilities like XXE, SSRF, Path Traversal, IDOR, and other logical issues related to Session and API Rate Limiting.","* Mobile Security
* SAST & DAST
* Malware Analysis
* Web API Security
* Vulnerability assessment",asia/2015,https://github.com/MobSF/Mobile-Security-Framework-MobSF,/MobSF/Mobile-Security-Framework-MobSF,4656,1415,4656,27,358211,1192,2019-10-17T15:59:38,2015-01-31T04:36:01,1720,0,0,0,0,0,90,201,195,316,1126,10,1116,341,1,340,"{'JavaScript': 681084, 'Python': 590499, 'HTML': 449831, 'CSS': 245924, 'Shell': 17208, 'Batchfile': 8732, 'Dockerfile': 3249}","Django==2.2.6
pdfkit==0.6.1
androguard==3.3.5
lxml==4.3.3
rsa==4.0
biplist==1.0.3
requests==2.22.0
bs4==0.0.1
colorlog==4.0.2
macholib==1.11
google-play-scraper==0.0.1.1
whitenoise==4.1.4
waitress==1.3.1
gunicorn==19.9.0
frida==12.7.5
psutil==5.6.3
shelljob==0.5.6
asn1crypto==1.0.1
oscrypto==1.0.0
#Do not update the following
pyparsing<2.3
click<7
http-tools==1.0.1"
mobile_hacking,Needle,"Needle is the MWR's iOS Security Testing Framework, released at Black Hat USA in August 2016. It is an open source modular framework which aims to streamline the entire process of conducting security assessments of iOS applications, and acts as a central point from which to do so. Given its modular approach, Needle is easily extensible and new modules can be added in the form of python scripts. Needle is intended to be useful not only for security professionals, but also for developers looking to secure their code. A few examples of testing areas covered by Needle include: data storage, inter-process communication, network communications, static code analysis, hooking and binary protections. The only requirement in order to run Needle effectively is a jailbroken device.With the release of Needle v1.0.0, we provided a major overhaul of its core and the introduction of a new native agent, written entirely in Objective-C. The new NeedleAgent is an open source iOS app complementary to Needle, that will allow it to programmatically perform tasks natively on the device, eliminating the need for third party tools.","* Mobile Security
* Vulnerability assessment
* Penetration Testing",usa/2016 europe/2016 usa/2017,https://github.com/mwrlabs/needle,/mwrlabs/needle,966,248,966,13,5434,577,2018-07-26T16:50:51,2016-07-23T13:02:53,733,0,0,0,0,0,0,316,258,3,277,25,252,132,3,129,{'Python': 393263},
mobile_hacking,objection,"Objection is a runtime mobile exploration toolkit, powered by Frida. It was built with the aim of helping assess mobile applications and their security posture without the need for a jailbroken or rooted mobile device. The project's name quite literally explains the approach as well, whereby runtime specific objects are injected into a running process and executed using Frida.","* Mobile Security
* Penetration Testing
* Reverse Engineering",europe/2017,https://github.com/sensepost/objection,/sensepost/objection,1896,264,1896,59,10159,623,2019-10-19T14:41:30,2017-06-29T13:53:48,842,0,0,0,0,0,0,0,247,125,285,44,241,52,1,51,"{'Python': 378247, 'TypeScript': 158162, 'JavaScript': 12202, 'Objective-C': 517, 'Makefile': 260}","frida
frida-tools
prompt_toolkit>=2.0.9,<3.0.0
click
tabulate
delegator.py
requests
flask
pygments
litecli==1.1.0"
network_attacks,Crowbar,"Crowbar (formally known as Levye) is a brute forcing tool that can be used during penetration tests. It was developed to brute force some protocols in a different manner according to other popular brute forcing tools. As an example, while most brute forcing tools use username and password for SSH brute force, Crowbar uses SSH key(s). This allows for any private keys that have been obtained during penetration tests, to be used to attack other SSH servers.Currently Crowbar supports:OpenVPN Remote Desktop Protocol (RDP) with NLA support SSH private key authenticationVNC key authentication",* Network Attacks,usa/2014,https://github.com/galkan/crowbar,/galkan/crowbar,650,213,650,8,722,79,2017-08-29T12:34:15,2014-09-30T07:43:13,1064,0,0,0,0,36,15,26,2,0,37,17,20,14,2,12,{'Python': 34469},
network_attacks,DELTA,"DELTA is a first SDN security evaluation framework, which has two primary functions; (1) It can automatically instantiate attack cases against SDN elements across diverse environments, and (2) it can assist in uncovering unknown security problems within an SDN deployment by using a blackbox fuzzing technique. For replaying attack cases, our framework has a number of test cases against popular SDN controllers and all SDN-enabled switch devices (software and hardware). Also, our framework provides a protocol-aware fuzzer for OpenFlow, which is a de-facto standard protocol of SDN, in order to find new vulnerabilities in SDNs.","* Network Attacks
* Vulnerability assessment
* Frameworks",usa/2017,https://github.com/OpenNetworkingFoundation/DELTA,/OpenNetworkingFoundation/DELTA,221,74,221,0,99665,813,2019-04-15T05:43:51,2016-04-13T07:00:04,1096,0,0,0,0,0,0,429,213,169,47,8,39,31,0,31,{},
network_attacks,DET,"DET aims to provide a framework to assist with exfiltrating data using either one or several channels. Social media has become extremely popular in recent attacks such as HammerToss, campaign uncovered by FireEye in July 2015. Several tools are also publicly available allowing you to remotely access computers through ""legitimate"" services such as Gmail (GCat) or Twitter (Twittor). Often gaining access to a network is just the first step for a targeted attacker. Once inside, the goal is to go after sensitive information and exfiltrate it to servers under their control. To prevent this from occuring, a whole industry has popped up with the aim of stopping exfiltration attacks. However, often these are expensive and rarely work as expected. With this in mind, I created the Data Exfiltration Toolkit (DET) to help both penetration testers testing deployed security devices and those admins who've installed and configured them, to ensure they are working as expected and detecting when sensitive data is leaving the network.","* Network Attacks
* Frameworks",usa/2016,https://github.com/PaulSec/DET,/PaulSec/DET,126,28,126,0,121,105,2019-08-28T07:08:23,2016-03-08T17:19:19,1267,0,0,0,0,0,0,29,66,8,6,0,6,6,0,6,"{'Python': 74290, 'HTML': 18354, 'PowerShell': 11831}","tweepy
pysocks
dnslib
pycrypto
slackclient
bitstring
dpkt>=1.9.1
pyftpdlib
email==6.0.0.a1
scapy
pygithub"
network_attacks,EAPHammer,"EAPHammer is a toolkit for performing targeted evil twin attacks against WPA2-Enterprise networks. It is designed to be used in full scope wireless assessments and red team engagements. As such, focus is placed on providing an easy-to-use interface that can be leveraged to execute powerful wireless attacks with minimal manual configuration. To illustrate how fast this tool is, here's an example of how to setup and execute a credential stealing evil twin attack against a WPA2-TTLS network in just two commands:","* Wireless
* Red Team
* Rogue Access Point Attacks
* WPA-EAP/WPA2-EAP",usa/2017,https://github.com/s0lst1c3/eaphammer,/s0lst1c3/eaphammer,898,166,898,11,5907,222,2019-10-04T05:30:43,2017-02-04T01:03:39,972,0,0,0,0,0,0,0,67,34,122,21,101,50,1,49,"{'C': 14570666, 'Python': 5407837, 'Makefile': 196680, 'C++': 175095, 'Shell': 90203, 'Java': 42922, 'PHP': 35212, 'Roff': 3358, 'Perl': 1575, 'QMake': 1535}",
network_attacks,Egression,"Egression is a utility for testing the data loss prevention controls on a corporate network.Many tools of this type work by testing outbound port connections alone, but Egression works by actually uploading a sensitive file to the internet in a number of ways.","* Network Attacks
* Vulnerability assessment
* Utilities",usa/2017,https://github.com/danielmiessler/egression,/danielmiessler/egression,68,18,68,0,26,24,2017-08-14T21:04:43,2017-07-22T18:31:51,23,0,0,0,0,0,0,0,24,0,1,0,1,0,0,0,{'Shell': 13384},
network_attacks,Flashlight,"Pentesters spend too much time during information gathering phase. Flashlight (Fener) provides services to scan network/ports and gather information rapidly on target networks. So Flashlight should be the choice to automate discovery step during a penetration test. In this article, usage of Flashligh application will be explained.",* Network Attacks,usa/2014,https://github.com/galkan/flashlight,/galkan/flashlight,155,50,155,1,110,109,2017-08-29T12:33:51,2015-07-01T06:58:27,790,0,0,0,0,0,105,2,2,0,10,4,6,3,1,2,{'Python': 29593},
network_attacks,gr-lora,"gr-lora is an open-source GNU Radio/Software Defined Radio implementation of the LoRa radio physical layer, as derived from the author's black box analysis of the protocol. gr-lora empowers developers and security researchers to think beyond packet sniffing and injection by exposing LoRa's physical layer in software.LoRa is a wireless networking technology that can be thought of as high-endurance cellular for IoT and embedded devices. It utilizes a unique Chirp Spread Spectrum modulation and layered encoding scheme to achieve remarkable range while remaining frugal on power.PHYs have long been taken for granted, however research such as Travis Goodspeed's packet-in-packet and Dartmouth/River Loop Security's 802.15.4 chipset fingerprinting have demonstrated that physical layer abuse can have severe consequences further up the stack. As a closed protocol, LoRa has only been exposed via layer 2+ interfaces; thus security researchers and developers have lacked the necessary tools to audit and analyze the security and robustness of its PHY.With its flexible and open architecture, gr-lora gives security researchers the capability required to explore this nascent protocol from its most fundamental layer.For more information on the LoRa PHY and Matt's blind signal analysis process:* 33c3 Video: https://media.ccc.de/v/33c3-7945-decoding_the_lora_phy* PoC||GTFO 0x13: https://www.alchemistowl.org/pocorgtfo/pocorgtfo13.pdf","* Network Attacks
* Wireless
* Reverse Engineering
* Hardware/IoT",usa/2017,https://github.com/BastilleResearch/gr-lora,/BastilleResearch/gr-lora,311,64,311,0,306,65,2017-07-13T23:37:01,2016-06-14T20:26:27,394,0,0,0,0,0,0,63,2,0,39,20,19,2,1,1,"{'C++': 176198, 'CMake': 86276, 'Python': 14531, 'C': 1043}",
network_attacks,Yasuo,"Yasuo is a ruby script that scans for vulnerable 3rd-party web applications.While working on a network security assessment (internal, external, red team gigs etc.), we often come across vulnerable 3rd-party web applications or web front-ends that allow us to compromise the remote server by exploiting publicly known vulnerabilities. Some of the common & favorite applications are Apache Tomcat administrative interface, JBoss jmx-console, Hudson Jenkins and so on.If you search through Exploit-db, there are over 10,000 remotely exploitable vulnerabilities that exist in tons of web applications/front-ends and could allow an attacker to completely compromise the back-end server. These vulnerabilities range from RCE to malicious file uploads to SQL injection to RFI/LFI etc.Yasuo is built to quickly scan the network for such vulnerable applications thus serving pwnable targets on a silver platter.","* Network Attacks
* Vulnerability assessment
* Frameworks",europe/2016 usa/2017,https://github.com/0xsauby/yasuo,/0xsauby/yasuo,468,133,468,0,2291,121,2017-12-09T19:02:11,2014-09-25T06:20:08,1171,0,0,0,0,42,46,27,6,0,35,2,33,14,0,14,{'Ruby': 30728},
network_defense,OSfooler,"An outsider has the capability to discover general information, such as which operating system a host is running, by searching for default stack parameters, ambiguities in IETF RFCs or non-compliant TCP/IP implementations in responses to malformed requests. By pinpointing the exact OS of a host, an attacker can launch an educated and precise attack against a target machine.There are lot of reasons to hide your OS to the entire world: * Revealing your OS makes things easier to find and successfully run an exploit against any of your devices. * Having and unpatched or antique OS version is not very convenient for your company prestige. Imagine that your company is a bank and some users notice that you are running an unpatched box. They won't trust you any longer! In addition, these kind of 'bad' news are always sent to the public opinion. * Knowing your OS can also become more dangerous, because people can guess which applications are you running in that OS (data inference). For example if your system is a MS Windows, and you are running a database, it's highly likely that you are running MS-SQL. * It could be convenient for other software companies, to offer you a new OS environment (because they know which you are running). * And finally, privacy; nobody needs to know the systems you've got running.OSfooler was presented at Blackhat Arsenal 2013. It was built on NFQUEUE, an iptables/ip6tables target which delegate the decision on packets to a userspace. It transparently intercepted all traffic that your box was sending in order to camouflage and modify in real time the flags in TCP/IP packets that discover your system. Detects and defeat at the same time: * Active remote OS fingerprinting: like Nmap * Passive remote OS fingeprinting: like p0f v2 * Commercial engines like Sourcefire’s FireSiGHT OS fingerprintingSome additional features are: * No need for kernel modification or patches * Simple user interface and several logging features * Transparent for users, internal process and services * Detecting and defeating mode: active, passive & combined * Will emulate any OS * Capable of handling updated nmap and p0f v2 fingerprint database * Undetectable for the attacker","* Network Defense
* Hardening",usa/2013,https://github.com/segofensiva/OSfooler-ng,/segofensiva/OSfooler-ng,32,15,32,1,582,2,2019-05-26T12:33:23,2019-05-26T12:15:07,0,0,0,0,0,0,0,0,0,0,4,4,0,1,1,0,"{'Python': 53483, 'GLSL': 48961}","dpkt
scapy"
network_defense,nan,nan,nan,nan,https://github.com/SecurityFTW/cs-suite,/SecurityFTW/cs-suite,580,136,580,0,3392,157,2019-10-16T14:05:10,2017-08-16T10:58:36,791,0,0,0,0,0,0,0,66,26,51,21,30,12,2,10,"{'Shell': 1362151, 'Python': 524092, 'HTML': 169023, 'JavaScript': 53609, 'PowerShell': 17942, 'CSS': 11609, 'Roff': 5322, 'Ruby': 672, 'Dockerfile': 600}","ansi2html==1.2.0
boto3==1.4.6
botocore==1.6.2
certifi==2017.7.27.1
chardet==3.0.4
colorama==0.3.7
DateTime==4.3
docutils==0.14
futures==3.1.1
google-api-python-client==1.6.1
httplib2==0.13.0
iampoliciesgonewild==1.0.6.2
idna==2.6
ipaddress==1.0.22
IPy==0.83
Jinja2==2.9.5
jmespath==0.9.3
logger==1.4
MarkupSafe==1.1.1
netaddr==0.7.19
oauth2client==4.1.3
opinel==3.3.4
public==2019.4.13
pyasn1==0.4.5
pyasn1-modules==0.2.5
python-dateutil==2.6.1
python-json-logger==0.1.11
pytz==2019.1
PyYAML==3.12
requests==2.18.4
rm==2019.4.13
rsa==3.4.2
s3transfer==0.1.10
six==1.12.0
termcolor==1.1.0
tinydb==3.6.0
uritemplate==3.0.0
urllib3==1.22
values==2019.4.13
zope.interface==4.6.0
pathlib"
network_defense,LuLu,"LuLu is the free open-source macOS firewall that aims to block unauthorized (outgoing) network traffic.<p align=""center""><img src=""https://objective-see.com/images/LL/lulu.png""></p>Full details and usage instructions can be found [here](https://objective-see.com/products/lulu.html).","* Network Defense
* Malware Research",usa/2017,https://github.com/objective-see/LuLu,/objective-see/LuLu,3144,167,3144,13,8652,128,2019-02-16T21:21:54,2017-09-10T06:56:24,524,0,0,0,0,0,0,0,36,74,148,73,75,19,1,18,"{'Objective-C': 415020, 'C++': 54440, 'Shell': 3165, 'C': 2312}",
network_defense,Sweet Security,Sweet Security is a suite of tools which allows users to monitor local network traffic from a single device as small as a raspberry pi.__Client/Sensor__- Bro IDS to monitor network traffic- (Optional) Critical Stack Intel to add threat intelligence feeds into Bro- Logstash to collect and normalize all Bro logs- Sweet Security code to scan the network and ARP spoof all local network traffic through the device__Server__- Elasticsearch to store logstash and sweet security data- Kibana to visualize logs/data- Sweet Security code to search log data for interesting events- Apache/Flask web app to manage environment* More information can be found in the Sweet Security wiki on the Github repository.* Slides from the public presentations are available on the Github repository.,"* Network Defense
* Forensics
* Incident Response",usa/2017,https://github.com/travisfsmith/sweetsecurity,/travisfsmith/sweetsecurity,652,175,652,0,45390,99,2017-07-26T04:28:15,2015-09-10T04:28:58,684,0,0,0,0,0,10,14,75,0,54,35,19,5,3,2,"{'Python': 159879, 'HTML': 35137, 'CSS': 33080, 'ApacheConf': 4352}",
network_defense,Zenected Threat Defense VPN,"__Zenected__ is a cloud based security threat protection service. It’s delivered through a set of pre-configured services. Once a user connects to the __Zenected__, that user’s network traffic is filtered to keep the bad things out (e.g. phishing sites, malware). The only thing this a user has to configure on the endpoint device (be it a mobile device, a desktop or laptop or IoT device) is a VPN connection.All services are updated every hour with a new set of threat indicators prepared by Perun Works.__Zenected__ is easy to manage. It uses a web front-end for administrators to manage your instance. An administrator user can:- manage __Zenected__ users including adding more admin users- blacklist URLs or domain names that you don't want your users to access- whitelist URLs or domain names, that were identified as malicious but you still want your users to be able to get to them- review exception requests from usersIf you are a __Zenected__ end-user what you will like about it, is:- no need to install additional software on your mobile phone, tablet or laptop – __Zenected__ uses standard OS features build-in into all modern systems- if you encounter a certain resource blocked by the system, you can request an exception. Each exception is then reviewed by an administrator.For more info and resources visit: https://zenected.com","* Network Defense
* Hardening",asia/2017,https://github.com/perunworks/zenected,/perunworks/zenected,10,3,10,0,37,26,2017-04-05T02:31:04,2017-02-07T15:02:24,56,0,0,0,0,0,0,0,26,0,1,1,0,1,1,0,{'Shell': 51409},
osint,DataSploit - OSINT Framework[![ToolsWatch Best Tools](https://www.toolswatch.org/badges/toptools/2016.svg)](http://www.toolswatch.org/2017/02/2016-top-security-tools-as-voted-by-toolswatch-org-readers/),An,"* Open Source Intelligence
* Penetration Testing
* Threat Intelligence",nan,https://github.com/datasploit/datasploit,/datasploit/datasploit,2157,296,2157,1,12092,367,2018-08-08T22:03:12,2016-05-23T13:01:46,807,0,0,0,0,0,0,167,177,23,293,103,190,109,29,80,"{'Python': 142261, 'HTML': 1923}","anyjson
beautifulsoup
beautifulsoup4
billiard
bs4
clearbit
config
configobj
dnspython
future
google-api-python-client
html5lib
idna
ipwhois
json2html
lxml
netaddr
piplapis-python
praw
pymongo
python-wappalyzer
python-whois
pytz
requests
requests-file
simplejson
termcolor
tld
tldextract
tqdm
travispy
tweepy"
osint,nan,"Trape is a OSINT analysis and research tool, which allows people to track and execute intelligent social engineering attacks in real time. It was created with the aim of teaching the world how large Internet companies could obtain confidential information such as the status of sessions of their websites or services and control over their users through the browser, without them knowing, but It evolves with the aim of helping government organizations, companies and researchers to track the cybercriminals.","* Capturing credentials
* Open Source Intelligence (**OSINT**)
* Phishing",asia/2018,https://github.com/jofpin/trape,/jofpin/trape,4316,717,4316,0,6685,105,2019-05-08T20:58:22,2017-10-31T14:03:57,554,0,0,0,0,0,0,0,46,49,179,83,96,28,2,26,"{'Python': 143789, 'HTML': 43891, 'JavaScript': 25675}","Flask
Flask-Login
Flask-Session
flask-socketio
flask_socketio
flask_cors
itsdangerous
Jinja2
MarkupSafe
python-engineio
python-socketio
six
Werkzeug
eventlet
requests
colorama"
phishing,SPF - SpeedPhishing Framework,SPF (SpeedPhish Framework) is a python tool designed to allow for quick recon and deployment of simple social engineering phishing exercises.,"* Phishing
* Frameworks",usa/2015,https://github.com/tatanus/SPF,/tatanus/SPF,347,109,347,0,574,85,2019-08-08T01:56:43,2015-05-15T14:40:23,1545,0,0,0,0,0,62,3,12,3,28,17,11,4,2,2,"{'Python': 157740, 'CSS': 106009, 'JavaScript': 99453}",
red_team,Legion,"At its core, Legion is a distributed computing application. It is written in python and designed from the ground up to fulfill various IT related needs. Whether you need a way to logically distribute large or complex commands across multiple systems, or if you need a way to remotely administer 1 or more other systems, Legion can help. Legion goes beyond a typical Master/Manager/Slave architecture and makes use of a MeshNetworking approach to help to dynamically route around failed nodes and networking issues. Additionally, it has the ability to allow remote shell access to any node as well as send individual commands to 1 or all of the nodes within the mesh. And of course all the communications are encrypted between the nodes.",* Red Team,usa/2017,https://github.com/MooseDojo/Legion,/MooseDojo/Legion,41,17,41,0,17,4,2017-07-27T01:48:40,2017-07-26T16:11:51,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,{'Python': 54923},
red_team,Merlin,"<p align=""center"">  <img src=""https://i.imgur.com/4iKuvuj.jpg"" height=""30%"" width=""30%""></p>Merlin is a cross-platform post-exploitation HTTP/2 Command & Control server and agent written in golang.An introductory blog post can be found here:https://medium.com/@Ne0nd0g/introducing-merlin-645da3c635a","* Command & Control
* Post Exploitation
* HTTP/2",usa/2018,https://github.com/Ne0nd0g/merlin,/Ne0nd0g/merlin,2376,321,2376,9,18386,476,2019-08-20T11:44:37,2017-01-06T11:19:04,956,0,0,0,0,0,0,0,87,154,79,21,58,30,4,26,"{'Go': 311804, 'JavaScript': 131761, 'Makefile': 6593, 'HTML': 2629, 'C': 1642, 'Dockerfile': 667}",
red_team,ShinoBOT Family,ShinoBOT Family is a malware set to test the security solution / security posture of the organization.,* Penetration Testing / Red Team,usa/2013 usa/2014 asia/2015 usa/2015 usa/2016 asia/2016,https://github.com/Sh1n0g1/ShinoBOT,/Sh1n0g1/ShinoBOT,64,24,64,0,1974,26,2019-08-02T09:03:15,2016-06-22T09:20:11,1135,0,0,0,0,0,0,17,6,1,3,1,2,0,0,0,{},
red_team,WarBerryPi,WarBerryPi was built to be used as a hardware implant during red teaming scenarios where we want to obtain as much information as possible in a short period of time with being as stealth as possible. Just find a network port and plug it in. The scripts have been designed in a way that the approach is targeted to avoid noise in the network that could lead to detection and to be as efficient as possible. The WarBerry script is a collection of scanning tools put together to provide that functionality.,"* Red Teaming
* Hardware Implant",usa/2016 europe/2016,https://github.com/secgroundzero/warberry,/secgroundzero/warberry,2170,297,2170,0,7580,307,2019-01-26T09:13:45,2016-05-10T16:25:03,990,0,0,0,0,0,0,251,40,15,112,3,109,36,1,35,"{'JavaScript': 597177, 'PHP': 184286, 'CSS': 101146, 'Python': 90546, 'HTML': 15802, 'Shell': 1576, 'C': 587}",
vulnerability_assessment,APT2 - An Automated Penetration Testing Toolkit,"```       dM.    `MMMMMMMb. MMMMMMMMMM      ,MMb     MM    `Mb /   MM   \      d'YM.    MM     MM     MM   ____     ,P `Mb    MM     MM     MM  6MMMMb     d'  YM.   MM    .M9     MM MM'  `Mb    ,P   `Mb   MMMMMMM9'     MM      ,MM    d'    YM.  MM            MM     ,MM'   ,MMMMMMMMb  MM            MM   ,M'   d'      YM. MM            MM ,M' _dM_     _dMM_MM_          _MM_MMMMMMMM An Automated Penetration Testing Toolkit```This tool will perform an NMap scan, or import the results of a scan from Nexpose, Nessus, or NMap. The processesd results will be used to launch exploit and enumeration modules according to the configurable Safe Level and enumerated service information.All module results are stored on localhost and are part of APT2's Knowledge Base (KB). The KB is accessible from within the application and allows the user to view the harvested results of an exploit module.","* Vulnerability assessment
* Exploitation
* Frameworks",usa/2016 europe/2016 asia/2018,https://github.com/tatanus/apt2,/tatanus/apt2,13,5,13,0,292,183,2018-11-02T15:39:39,2016-03-15T18:11:33,961,0,0,0,0,0,0,129,25,29,0,0,0,0,0,0,"{'Python': 214907, 'JavaScript': 2069, 'Shell': 593}",
vulnerability_assessment,Archery,Archery is an opensource vulnerability assessment and management tool which helps developers and pentesters to perform scans and manage vulnerabilities. Archery uses popular opensource tools to perform comprehensive scanning for web application and network. It also performs web application dynamic authenticated scanning and covers the whole applications by using selenium. The developers can also utilize the tool for implementation of their DevOps CI/CD environment.,* Vulnerability Assessment,usa/2018 asia/2018,https://github.com/archerysec/archerysec,/archerysec/archerysec,1217,293,1217,4,64404,848,2019-10-06T05:54:14,2017-12-04T12:37:26,670,0,0,0,0,0,0,0,108,510,320,32,288,199,0,199,"{'JavaScript': 985316, 'HTML': 933294, 'Python': 885026, 'CSS': 239078, 'Lua': 7802, 'TSQL': 2899, 'Shell': 2500, 'Dockerfile': 1650}","django-notifications-hq==1.5.0
asn1crypto==0.23.0
astroid
backports.functools-lru-cache==1.5
certifi==2019.3.9
cffi==1.11.2
chardet==3.0.4
click==7.0
configparser==3.5.0
coreapi==2.3.3
coreapi-cli==1.0.9
coreschema==0.0.4
cryptography==2.3
cssselect2==0.2.1
defusedxml==0.5.0
Django
django-appconf==1.0.2
django-background-tasks==1.2.0
django-compat==1.0.15
django-cryptography==0.3
django-debug-toolbar==1.10.1
django-easy-pdf==0.1.1
django-fernet-fields==0.5
django-settings-export==1.2.1
django-sitetree==1.12.0
django-stronghold==0.3.0
djangorestframework==3.9.1
djangorestframework-jwt==1.11.0
dnspython==1.16.0
enum34==1.1.6
future
futures
gunicorn==19.9.0
html5lib==1.0.1
httplib2==0.12.1
idna==2.6
ipaddress==1.0.18
isort==4.3.17
itypes==1.1.0
Jinja2==2.10.1
jira==2.0.0
lazy-object-proxy==1.3.1
lxml==4.3.3
MarkupSafe==1.0
mccabe==0.6.1
oauthlib==2.0.7
openvas_lib
ordereddict==1.1
pbr==4.0.3
pdfrw==0.4
Pillow==6.0.0
psycopg2-binary==2.7.5
PyBurprestapi
pycparser==2.18
PyJWT==1.6.1
pylint==1.9.3
PyPDF2==1.26.0
Pyphen==0.9.4
python-nmap==0.6.1
python-owasp-zap-v2.4==0.0.13
python-taint==0.40
python-whois==0.6.2
pytz==2017.3
reportlab==3.4.0
requests==2.20.0
requests-oauthlib==0.8.0
requests-toolbelt==0.8.0
selenium==3.8.0
singledispatch==3.4.0.3
six==1.11.0
tinycss2
uritemplate==3.0.0
urllib3
webencodings==0.5.1
whitenoise==3.3.0
wrapt==1.10.11
xhtml2pdf==0.2.3
beautifulsoup4==4.7.1
django-import-export==1.2.0
django-s3-storage==0.12.4"
vulnerability_assessment,Faraday,"Faraday®, a comprehensive platform for vulnerability management that simplifies your work automating scans and reports. A real-time collaborative environment that increases transparency, speed and efficiency for your audits and for your teams. This provides greater visibility and helps you to make smarter security investments and leverage your existing resources.","* red-team
* vulnerability_assessment
* framework",asia/2017 usa/2016 europe/2016 asia/2016 usa/2015 europe/2015 usa/2011,https://github.com/infobyte/faraday/,/infobyte/faraday,2361,580,2361,37,24088,8247,2019-10-07T16:31:26,2013-11-06T02:07:23,2161,0,0,0,35,848,1081,1517,1369,1618,374,58,316,55,5,50,"{'Python': 2375021, 'JavaScript': 1914134, 'HTML': 374360, 'CSS': 124886, 'Java': 62338, 'Shell': 21270, 'Makefile': 7610, 'Batchfile': 7453, 'Nix': 1351, 'Dockerfile': 652, 'Mako': 494}","websocket-client>=0.54.0
autobahn>=17.10.1
colorama>=0.3.9
deprecation>=1.0.1
flask>=1.0
IPy>=0.83
mockito>=1.0.12
pgcli>=1.8.2
requests>=2.18.4
tornado==4.5.1
tqdm>=4.15.0
whoosh>=2.7.4
cairocffi==0.9.0
pycairo==1.18.1
PyGObject==3.32.1
lxml==4.3.3
html2text==2019.8.11"
vulnerability_assessment,Intrigue Core - Asset Discovery,Intrigue Core is an attack surface discovery framework that discovers assets and vulnerabilities utilizing APIs and OSINT techniques.,"* Vulnerability Assessment
* Penetration Testing
* Open Source Intelligence",nan,https://github.com/intrigueio/intrigue-core,/intrigueio/intrigue-core,688,160,688,3,23654,2891,2019-10-17T13:41:01,2015-07-06T07:55:15,1564,0,0,0,0,0,483,387,603,777,101,1,100,24,0,24,"{'Ruby': 728668, 'JavaScript': 726453, 'HTML': 59699, 'Shell': 12820, 'Dockerfile': 1972, 'Python': 1587, 'CSS': 1105}",
vulnerability_assessment,TROMMEL,"TROMMEL sifts through embedded device files to identify potential vulnerable indicators. <br />TROMMEL identifies the following indicators related to: * Secure Shell (SSH) key files* Secure Socket Layer (SSL) key files* Internet Protocol (IP) addresses* Uniform Resource Locator (URL)* email addresses* shell scripts* web server binaries* configuration files* database files* specific binaries files (i.e. Dropbear, BusyBox, etc.) * shared object library files* web application scripting variables, and * Android application package (APK) file permissions. TROMMEL has also integrated [vFeed](https://vfeed.io/) which allows for further in-depth vulnerability analysis of identified indicators. <br />TROMMEL was written with the intent to help with identifying indicators that may contain vulnerabilities found in firmware of embedded devices. <br/>",* Vulnerability assessment,usa/2018,https://github.com/CERTCC/trommel,/CERTCC/trommel,155,40,155,0,140,85,2019-08-05T18:38:49,2017-10-19T12:36:17,655,0,0,0,0,0,0,0,32,36,11,0,11,2,0,2,"{'Python': 88053, 'TSQL': 2963}",
webapp_security,Jack,Jack is a web based ClickJacking PoC development assistance tool. Jack makes use of static HTML and JavaScript to create a drag n drop environment to illustrate the impact of ClickJacking.,"* Webb Application Security
* Vulnerability assessment
* Phishing",europe/2015,https://github.com/sensepost/jack,/sensepost/jack,143,62,143,0,392,31,2016-09-23T09:39:43,2014-12-02T20:13:17,660,0,0,0,0,2,26,3,0,0,3,1,2,2,1,1,"{'CSS': 31608, 'HTML': 24213}",
webapp_security,OWASP JoomScan,"OWASP Joomla! Vulnerability Scanner (JoomScan) is an open source project, developed with the aim of automating the task of vulnerability detection and reliability assurance in Joomla CMS deployments. Implemented in Perl, this tool enables seamless and effortless scanning of Joomla installations, while leaving a minimal footprint with its lightweight and modular architecture. It not only detects known offensive vulnerabilities, but also is able to detect many misconfigurations and admin-level shortcomings that can be exploited by adversaries to compromise the system. Furthermore, OWASP JoomScan provides a user-friendly interface and compiles the final reports in both text and HTML formats for ease of use and minimization of reporting overheads.<br>OWASP JoomScan is included in Kali Linux distributions.",nan,usa/2018 asia/2018,https://github.com/rezasp/joomscan,/rezasp/joomscan,483,143,483,4,277,71,2019-10-02T14:22:55,2016-09-01T09:06:17,1126,0,0,0,0,0,0,3,0,50,41,13,28,16,0,16,"{'Perl 6': 58825, 'Perl': 36218, 'Dockerfile': 460}",
webapp_security,OWASP Offensive Web Testing Framework (OWTF),"OWASP OWTF is a project focused on penetration testing efficiency and alignment of security tests to security standards like the OWASP Testing Guide (v3 and v4), the OWASP Top 10, PTES and NIST so that pentesters will have more time to:* See the big picture and think out of the box* More efficiently find, verify and combine vulnerabilities* Have time to investigate complex vulnerabilities like business logic/architectural flaws, etc.* Perform more tactical/targeted fuzzing on seemingly risky areas* Demonstrate true impact despite the short timeframes we are typically given to testOWTF includes:* A highly configurable plugin system* A fast (the fastest Python MiTM proxy yet!) MiTM SSL proxy* A pretty web interface* An interactive report* Full coverage for OWASP Testing Guide v3/v4, PTES, NIST, and CWE mappings* Built-in integrations for Mozilla Zest and Plug-n-Hack standards* REST API exposed to control and extend the functionality of OWTF","* Web Application
* OWASP
* Pentest
* Vulnerability assessment",usa/2017,https://github.com/owtf/owtf,/owtf/owtf,1196,365,1196,11,25344,2100,2019-08-27T03:24:48,2012-01-19T06:37:29,2776,0,0,29,360,671,193,409,161,237,1039,30,1009,404,4,400,"{'Python': 656488, 'JavaScript': 615473, 'Shell': 40937, 'Perl': 18883, 'Makefile': 4753, 'CSS': 2657, 'Dockerfile': 2328, 'HTML': 1523}",
webapp_security,PyMultitor,"Python Multi Threaded Tor Proxy,  Did you ever want to be at two different places at the same time?  When I asked myself this question, I actually started developing this solution in my mind.  While performing penetration tests there are often problems caused by security devices that block the ""attacking"" IP.  This really annoyed me, so I wrote a script to supply a solution for this problem.  With a large number of IP addresses performing the attacks, better results are guaranteed - especially when attempting attacks to bypass Web Application Firewalls, Brute-Force type attacks and many more.  [DigitalWhisper Article (Hebrew)] http://www.digitalwhisper.co.il/files/Zines/0x2E/DW46-3-PyMultitor.pdf  [Presentation] https://www.slideshare.net/tzanany/pymultitor-74222570","* Web Application Security
* Pentest",asia/2017 usa/2017 europe/2017,https://github.com/realgam3/pymultitor,/realgam3/pymultitor,361,88,361,1,1873,18,2017-12-31T09:30:30,2013-09-28T17:13:26,1554,0,0,0,10,0,0,0,8,0,18,5,13,4,0,4,{'Python': 15030},"stem >= 1.5.4
mitmproxy >= 0.18.3, < 3.0.0
requests[socks] >= 2.9.1, < 2.12.0"
webapp_security,ThreatPlaybook,"A (relatively) Unopinionated framework that faciliates Threat Modeling as Code married with Application Security Automation on a single Fabric. ThreatPlaybook was born in we45, as a framework to capture Threat Models for our internal Projects (especially Pentests). We have built it with the following parameters in mind: * Threat Models as Code: Codify Threat Models by Capturing User Stories => Abuser Stories => Threat Models/Scenarios and Test Cases in YAML files that can be parsed and processed by another system* Capture Security Test Cases: Security Test Cases are descriptions of techniques used by security testers to test for specific vulnerabilities. These may include SAST, DAST tools, SCA tools, Reconnaissance tools and so on* Leverage Security Automation: Inspired the Playbook style models of Ansible, Kubernetes, Metta and so on, we wanted to create framework that could amalgamate Threat Models, Test Cases and running of targeted Security Automation. We have used the Robot Framework to process the Threat Models and run the Security Automation Test Cases","* Web Application
* OWASP
* Pentest
* Vulnerability Assessment
* Frameworks",usa/2018,https://github.com/we45/ThreatPlaybook,/we45/ThreatPlaybook,90,19,90,4,1326,207,2019-08-28T13:39:31,2018-04-29T17:34:11,485,0,0,0,0,0,0,0,0,77,28,4,24,10,0,10,"{'HTML': 140944, 'Vue': 123104, 'Python': 121416, 'JavaScript': 29701, 'Shell': 1374, 'Dockerfile': 793}",
webapp_security,WSSAT - Web Service Security Assessment Tool,"WSSAT is an open source web service security scanning tool which provides a dynamic environment to add, update or delete vulnerabilities by just editing its configuration files. This tool accepts WSDL address list as input file and for each service, it performs both static and dynamic tests against the security vulnerabilities. It also makes information disclosure controls.With this tool, all web services could be analysed at once and the overall security assessment could be seen by the organization.**Objectives of WSSAT are to allow organizations:*** Perform their web services security analysis at once* See overall security assessment with reports* Harden their web services","* Web Application
* Web Service
* Pentest
* Vulnerability assessment",usa/2016,https://github.com/YalcinYolalan/WSSAT,/YalcinYolalan/WSSAT,317,97,317,1,23123,66,2019-05-03T08:30:50,2016-02-13T17:38:00,1174,0,0,0,0,0,0,21,0,44,13,4,9,0,0,0,"{'C#': 181217, 'HTML': 8819, 'ASP': 1704}",
webapp_security,ZAP,"The OWASP Zed Attack Proxy (ZAP) is one of the world’s most popular free security tools and is actively maintained by hundreds of international volunteers. It can help you automatically find security vulnerabilities in your web applications while you are developing and testing your applications. Its also a great tool for experienced pentesters to use for manual security testing. Some of the built in features include: Intercepting proxy server, Traditional and AJAX Web crawlers, Automated scanner, Passive scanner, Forced browsing, Fuzzer, WebSocket support, Scripting languages, and Plug-n-Hack support. It has a plugin-based architecture and an online ‘marketplace’ which allows new or updated features to be added. The GUI control panel is easy to use, and the API functions make it ideal for automation testing and continuous assessments in a SDLC.","* Web Application 
* OWASP
* Pentest
* Web API Security
* Vulnerability assessment",europe/2016 europe/2014 usa/2014,https://github.com/zaproxy/zaproxy,/zaproxy/zaproxy,6410,1181,6410,133,181583,7056,2019-10-16T12:32:03,2010-08-16T18:55:36,3347,87,408,663,707,821,725,1008,1172,1071,5624,652,4972,2152,11,2141,"{'Java': 10706919, 'HTML': 3963786, 'PHP': 118474, 'Python': 117061, 'Kotlin': 46035, 'XSLT': 19720, 'JavaScript': 11081, 'Lex': 7594, 'Perl': 3826, 'Shell': 3061}",
