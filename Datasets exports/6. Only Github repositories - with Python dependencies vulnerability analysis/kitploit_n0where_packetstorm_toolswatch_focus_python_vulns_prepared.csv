tool_link,tool_link_host,tool_link_path,requirements_txt,requirements_vuln_name,requirements_vuln_version,requirements_vuln_spec,requirements_vuln_advisory,requirements_vuln_cve,requirements_vuln_pyup_vuln_id
https://github.com/0xbug/SQLiScanner,github.com,/0xbug/SQLiScanner,Django==1.9,django,1.9,">=1.9,<1.9.10","The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",CVE-2016-7401,25718
https://github.com/0xbug/SQLiScanner,github.com,/0xbug/SQLiScanner,Django==1.9,django,1.9,">=1.9,<1.9.11","Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",CVE-2016-9014,33075
https://github.com/0xbug/SQLiScanner,github.com,/0xbug/SQLiScanner,Django==1.9,django,1.9,">=1.9,<1.9.11","Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",CVE-2016-9013,33076
https://github.com/0xbug/SQLiScanner,github.com,/0xbug/SQLiScanner,Django==1.9,django,1.9,">=1.9,<1.9.11","Django 1.9.11 fixes two security issues in 1.9.10.

User with hardcoded password created when running tests on Oracle
=================================================================

When running tests with an Oracle database, Django creates a temporary database
user. In older versions, if a password isn't manually specified in the database
settings ``TEST`` dictionary, a hardcoded password is used. This could allow
an attacker with network access to the database server to connect.

This user is usually dropped after the test suite completes, but not when using
the ``manage.py test --keepdb`` option or if the user has an active session
(such as an attacker's connection).

A randomly generated password is now used for each test run.

DNS rebinding vulnerability when ``DEBUG=True``
===============================================",,25734
https://github.com/0xbug/SQLiScanner,github.com,/0xbug/SQLiScanner,Django==1.9,django,1.9,">=1.9,<1.9.13","Django 1.9.13 fixes two security issues and a bug in 1.9.12. This is the final
release of the 1.9.x series.

CVE-2017-7233: Open redirect and possible XSS attack via user-supplied numeric redirect URLs
============================================================================================

Django relies on user input in some cases  (e.g.
:func:`django.contrib.auth.views.login` and :doc:`i18n </topics/i18n/index>`)
to redirect the user to an ""on success"" URL. The security check for these
redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric
URLs (e.g. ``http:999999999``) ""safe"" when they shouldn't be.

Also, if a developer relies on ``is_safe_url()`` to provide safe redirect
targets and puts such a URL into a link, they could suffer from an XSS attack.

CVE-2017-7234: Open redirect vulnerability in ``django.views.static.serve()``
=============================================================================

A maliciously crafted URL to a Django site using the
:func:`~django.views.static.serve` view could redirect to any other domain. The
view no longer does any redirects as they don't provide any known, useful
functionality.

Note, however, that this view has always carried a warning that it is not
hardened for production use and should be used only as a development aid.",,33302
https://github.com/0xbug/SQLiScanner,github.com,/0xbug/SQLiScanner,Django==1.9,django,1.9,">=1.9,<1.9.2","Django 1.9.x before 1.9.2, when ModelAdmin.save_as is set to True, allows remote authenticated users to bypass intended access restrictions and create ModelAdmin objects via the ""Save as New"" option when editing objects and leveraging the ""change"" permission.",CVE-2016-2048,25735
https://github.com/0xbug/SQLiScanner,github.com,/0xbug/SQLiScanner,Django==1.9,django,1.9,">=1.9,<1.9.3",The password hasher in contrib/auth/hashers.py in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to enumerate users via a timing attack involving login requests.,CVE-2016-2513,33074
https://github.com/0xbug/SQLiScanner,github.com,/0xbug/SQLiScanner,Django==1.9,django,1.9,">=1.9,<1.9.3","The utils.http.is_safe_url function in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks or possibly conduct cross-site scripting (XSS) attacks via a URL containing basic authentication, as demonstrated by http://mysite.example.com\@attacker.com.",CVE-2016-2512,33073
https://github.com/0xbug/SQLiScanner,github.com,/0xbug/SQLiScanner,Django==1.9,django,1.9,">=1.9,<1.9.8","Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",CVE-2016-6186,25721
https://github.com/0xbug/SQLiScanner,github.com,/0xbug/SQLiScanner,requests==2.10.0,requests,2.10.0,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/4w4k3/Insanity-Framework,github.com,/4w4k3/Insanity-Framework,pycrypto==2.6.1,pycrypto,2.6.1,<=2.6.1,Heap-based buffer overflow in the ALGnew function in block_templace.c in Python Cryptography Toolkit (aka pycrypto) 2.6.1 allows remote attackers to execute arbitrary code as demonstrated by a crafted iv parameter to cryptmsg.py.,CVE-2013-7459,35015
https://github.com/DonnchaC/onionbalance,github.com,/DonnchaC/onionbalance,pycrypto==2.6.1,pycrypto,2.6.1,<=2.6.1,Heap-based buffer overflow in the ALGnew function in block_templace.c in Python Cryptography Toolkit (aka pycrypto) 2.6.1 allows remote attackers to execute arbitrary code as demonstrated by a crafted iv parameter to cryptmsg.py.,CVE-2013-7459,35015
https://github.com/Ekultek/Pybelt,github.com,/Ekultek/Pybelt,requests==2.11.1,requests,2.11.1,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/Ekultek/Zeus-Scanner,github.com,/Ekultek/Zeus-Scanner,requests==2.12.2,requests,2.12.2,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/HASecuritySolutions/VulnWhisperer,github.com,/HASecuritySolutions/VulnWhisperer,Requests==2.18.3,requests,2.18.3,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/InQuest/omnibus,github.com,/InQuest/omnibus,requests==2.7.0,requests,2.7.0,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/Netflix/Stethoscope,github.com,/Netflix/Stethoscope,cryptography==2.0.3,cryptography,2.0.3,">=1.9.0,<2.3",python-cryptography versions >=1.9.0 and <2.3 did not enforce a minimum tag length for finalize_with_tag API. If a user did not validate the input length prior to passing it to finalize_with_tag an attacker could craft an invalid payload with a shortened tag (e.g. 1 byte) such that they would have a 1 in 256 chance of passing the MAC check. GCM tag forgeries can cause key leakage.,CVE-2018-10903,36351
https://github.com/Netflix/Stethoscope,github.com,/Netflix/Stethoscope,Flask==0.12.2,flask,0.12.2,<0.12.3,flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3.,CVE-2018-1000656,36388
https://github.com/Netflix/Stethoscope,github.com,/Netflix/Stethoscope,pyOpenSSL==17.3.0,pyopenssl,17.3.0,<17.5.0,Python Cryptographic Authority pyopenssl version prior to version 17.5.0 contains a CWE-416: Use After Free vulnerability in X509 object handling that can result in Use after free can lead to possible denial of service or remote code execution.. This attack appear to be exploitable via Depends on the calling application and if it retains a reference to the memory.. This vulnerability appears to have been fixed in 17.5.0.,CVE-2018-1000807,36533
https://github.com/Netflix/Stethoscope,github.com,/Netflix/Stethoscope,pyOpenSSL==17.3.0,pyopenssl,17.3.0,<17.5.0,Python Cryptographic Authority pyopenssl version Before 17.5.0 contains a CWE - 401 : Failure to Release Memory Before Removing Last Reference vulnerability in PKCS #12 Store that can result in Denial of service if memory runs low or is exhausted.,CVE-2018-1000808,36534
https://github.com/Netflix/Stethoscope,github.com,/Netflix/Stethoscope,requests==2.18.4,requests,2.18.4,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/Netflix/Stethoscope,github.com,/Netflix/Stethoscope,urllib3==1.22,urllib3,1.22,<1.23,"urllib3 before 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.",CVE-2018-20060,36541
https://github.com/P0cL4bs/3vilTwinAttacker,github.com,/P0cL4bs/3vilTwinAttacker,Flask==0.11.1,flask,0.11.1,<0.12.3,flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3.,CVE-2018-1000656,36388
https://github.com/P0cL4bs/WiFi-Pumpkin,github.com,/P0cL4bs/WiFi-Pumpkin,Flask==0.11.1,flask,0.11.1,<0.12.3,flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3.,CVE-2018-1000656,36388
https://github.com/RhinoSecurityLabs/pacu,github.com,/RhinoSecurityLabs/pacu,urllib3==1.22,urllib3,1.22,<1.23,"urllib3 before 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.",CVE-2018-20060,36541
https://github.com/SecurityFTW/cs-suite,github.com,/SecurityFTW/cs-suite,requests==2.18.4,requests,2.18.4,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/SecurityFTW/cs-suite,github.com,/SecurityFTW/cs-suite,urllib3==1.22,urllib3,1.22,<1.23,"urllib3 before 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.",CVE-2018-20060,36541
https://github.com/TheSph1nx/AbsoluteZero,github.com,/TheSph1nx/AbsoluteZero,pycrypto==2.6.1,pycrypto,2.6.1,<=2.6.1,Heap-based buffer overflow in the ALGnew function in block_templace.c in Python Cryptography Toolkit (aka pycrypto) 2.6.1 allows remote attackers to execute arbitrary code as demonstrated by a crafted iv parameter to cryptmsg.py.,CVE-2013-7459,35015
https://github.com/TheTorProject/ooni-probe,github.com,/TheTorProject/ooni-probe,pyOpenSSL==16.2.0,pyopenssl,16.2.0,<17.5.0,Python Cryptographic Authority pyopenssl version prior to version 17.5.0 contains a CWE-416: Use After Free vulnerability in X509 object handling that can result in Use after free can lead to possible denial of service or remote code execution.. This attack appear to be exploitable via Depends on the calling application and if it retains a reference to the memory.. This vulnerability appears to have been fixed in 17.5.0.,CVE-2018-1000807,36533
https://github.com/TheTorProject/ooni-probe,github.com,/TheTorProject/ooni-probe,pyOpenSSL==16.2.0,pyopenssl,16.2.0,<17.5.0,Python Cryptographic Authority pyopenssl version Before 17.5.0 contains a CWE - 401 : Failure to Release Memory Before Removing Last Reference vulnerability in PKCS #12 Store that can result in Denial of service if memory runs low or is exhausted.,CVE-2018-1000808,36534
https://github.com/aancw/Belati,github.com,/aancw/Belati,django==1.11.6,django,1.11.6,"<1.11.19,>=1.11.0",Django 1.11.x before 1.11.19 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.,CVE-2019-6975,36885
https://github.com/aancw/Belati,github.com,/aancw/Belati,django==1.11.6,django,1.11.6,"<1.11.22,>1.11","An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",CVE-2019-12781,37261
https://github.com/aancw/Belati,github.com,/aancw/Belati,django==1.11.6,django,1.11.6,">=1.11,<1.11.11","The ``django.utils.html.urlize()`` function was extremely slow to evaluate
certain inputs due to a catastrophic backtracking vulnerability in a regular
expression. The ``urlize()`` function is used to implement the ``urlize`` and
``urlizetrunc`` template filters, which were thus vulnerable.

The problematic regular expression is replaced with parsing logic that behaves
similarly.",CVE-2018-7536,35797
https://github.com/aancw/Belati,github.com,/aancw/Belati,django==1.11.6,django,1.11.6,">=1.11,<1.11.11","If ``django.utils.text.Truncator``'s ``chars()`` and ``words()`` methods were
passed the ``html=True`` argument, they were extremely slow to evaluate certain
inputs due to a catastrophic backtracking vulnerability in a regular
expression. The ``chars()`` and ``words()`` methods are used to implement the
``truncatechars_html`` and ``truncatewords_html`` template filters, which were
thus vulnerable.",CVE-2018-7537,35796
https://github.com/aancw/Belati,github.com,/aancw/Belati,django==1.11.6,django,1.11.6,">=1.11.0, <1.11.15",django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect. A remote user can redirect the target user's browser to an arbitrary site.,CVE-2018-14574,36368
https://github.com/anandtiwarics/archerysec,github.com,/anandtiwarics/archerysec,whitenoise==3.3.0,whitenoise,3.3.0,<4.1.3,"whitenoise 4.1.3 change: Fix potential path traversal attack while running in autorefresh mode on
   Windows",,37275
https://github.com/andresriancho/nimbostratus,github.com,/andresriancho/nimbostratus,requests==1.2.3,requests,1.2.3,<2.3.0,"requests before 2.3.0 exposes Authorization or Proxy-Authorization headers on redirect.
  Fix CVE-2014-1829 and CVE-2014-1830 respectively",,26101
https://github.com/andresriancho/nimbostratus,github.com,/andresriancho/nimbostratus,requests==1.2.3,requests,1.2.3,<2.6.0,requests 2.6.0 fixes handling of cookies on redirect. Previously a cookie without a host value set would use the hostname for the redirected URL exposing requests users to session fixation attacks and potentially cookie stealing.,,26102
https://github.com/andresriancho/nimbostratus,github.com,/andresriancho/nimbostratus,requests==1.2.3,requests,1.2.3,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/apg-intel/ipv6tools,github.com,/apg-intel/ipv6tools,Flask==0.12.2,flask,0.12.2,<0.12.3,flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3.,CVE-2018-1000656,36388
https://github.com/archerysec/archerysec,github.com,/archerysec/archerysec,whitenoise==3.3.0,whitenoise,3.3.0,<4.1.3,"whitenoise 4.1.3 change: Fix potential path traversal attack while running in autorefresh mode on
   Windows",,37275
https://github.com/averonesis/kubolt,github.com,/averonesis/kubolt,requests==2.18.4,requests,2.18.4,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/blabla1337/skf-flask,github.com,/blabla1337/skf-flask,numpy==1.15.4,numpy,1.15.4,<=1.16.0,"An issue was discovered in NumPy 1.16.0 and earlier. It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.",CVE-2019-6446,36810
https://github.com/brannondorsey/PassGAN,github.com,/brannondorsey/PassGAN,numpy==1.13.3,numpy,1.13.3,<=1.16.0,"An issue was discovered in NumPy 1.16.0 and earlier. It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.",CVE-2019-6446,36810
https://github.com/brannondorsey/PassGAN,github.com,/brannondorsey/PassGAN,tensorflow==1.4.1,tensorflow,1.4.1,<1.10.0,tensorflow before 1.10.0 uses an insecure grpc dependency.,,36375
https://github.com/cchio/deep-pwning,github.com,/cchio/deep-pwning,numpy==1.11.1,numpy,1.11.1,<=1.16.0,"An issue was discovered in NumPy 1.16.0 and earlier. It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.",CVE-2019-6446,36810
https://github.com/cchio/deep-pwning,github.com,/cchio/deep-pwning,tensorflow==0.8.0,tensorflow,0.8.0,<1.10.0,tensorflow before 1.10.0 uses an insecure grpc dependency.,,36375
https://github.com/certsocietegenerale/FIR,github.com,/certsocietegenerale/FIR,Django==1.11,django,1.11,"<1.11.19,>=1.11.0",Django 1.11.x before 1.11.19 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.,CVE-2019-6975,36885
https://github.com/certsocietegenerale/FIR,github.com,/certsocietegenerale/FIR,Django==1.11,django,1.11,">=1.11,<1.11.11","The ``django.utils.html.urlize()`` function was extremely slow to evaluate
certain inputs due to a catastrophic backtracking vulnerability in a regular
expression. The ``urlize()`` function is used to implement the ``urlize`` and
``urlizetrunc`` template filters, which were thus vulnerable.

The problematic regular expression is replaced with parsing logic that behaves
similarly.",CVE-2018-7536,35797
https://github.com/certsocietegenerale/FIR,github.com,/certsocietegenerale/FIR,Django==1.11,django,1.11,">=1.11,<1.11.11","If ``django.utils.text.Truncator``'s ``chars()`` and ``words()`` methods were
passed the ``html=True`` argument, they were extremely slow to evaluate certain
inputs due to a catastrophic backtracking vulnerability in a regular
expression. The ``chars()`` and ``words()`` methods are used to implement the
``truncatechars_html`` and ``truncatewords_html`` template filters, which were
thus vulnerable.",CVE-2018-7537,35796
https://github.com/certsocietegenerale/FIR,github.com,/certsocietegenerale/FIR,Django==1.11,django,1.11,">=1.11,<1.11.5","Django 1.11.5 fixes a security issue and several bugs in 1.11.4.

CVE-2017-12794: Possible XSS in traceback section of technical 500 debug page
=============================================================================

In older versions, HTML autoescaping was disabled in a portion of the template
for the technical 500 debug page. Given the right circumstances, this allowed
a cross-site scripting attack. This vulnerability shouldn't affect most
production sites since you shouldn't run with ``DEBUG = True`` (which makes
this page accessible) in your production settings.",,34917
https://github.com/certsocietegenerale/FIR,github.com,/certsocietegenerale/FIR,Django==1.11,django,1.11,">=1.11.0, <1.11.15",django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect. A remote user can redirect the target user's browser to an arbitrary site.,CVE-2018-14574,36368
https://github.com/certsocietegenerale/FIR,github.com,/certsocietegenerale/FIR,whitenoise==3.2.1,whitenoise,3.2.1,<4.1.3,"whitenoise 4.1.3 change: Fix potential path traversal attack while running in autorefresh mode on
   Windows",,37275
https://github.com/certsocietegenerale/FIR,github.com,/certsocietegenerale/FIR,markdown2==2.3.1,markdown2,2.3.1,<2.3.5,"An issue was discovered in markdown2 (aka python-markdown2) through 2.3.5. The safe_mode feature, which is supposed to sanitize user input against XSS, is flawed and does not escape the input properly. With a crafted payload, XSS can be triggered, as demonstrated by omitting the final '>' character from an IMG tag.",CVE-2018-5773,35760
https://github.com/certsocietegenerale/FIR,github.com,/certsocietegenerale/FIR,bleach==1.5.0,bleach,1.5.0,<2.1,"bleach 2.1 converts control characters (backspace particularly) to ""?"" preventing malicious copy-and-paste situations.",,34965
https://github.com/codingo/VHostScan,github.com,/codingo/VHostScan,numpy==1.12.0,numpy,1.12.0,<=1.16.0,"An issue was discovered in NumPy 1.16.0 and earlier. It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.",CVE-2019-6446,36810
https://github.com/dagrz/aws_pwn,github.com,/dagrz/aws_pwn,requests==2.18.4,requests,2.18.4,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/dagrz/aws_pwn,github.com,/dagrz/aws_pwn,urllib3==1.22,urllib3,1.22,<1.23,"urllib3 before 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.",CVE-2018-20060,36541
https://github.com/davidtavarez/pwndb,github.com,/davidtavarez/pwndb,requests==2.19.1,requests,2.19.1,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/detuxsandbox/detux,github.com,/detuxsandbox/detux,pycrypto==2.6.1,pycrypto,2.6.1,<=2.6.1,Heap-based buffer overflow in the ALGnew function in block_templace.c in Python Cryptography Toolkit (aka pycrypto) 2.6.1 allows remote attackers to execute arbitrary code as demonstrated by a crafted iv parameter to cryptmsg.py.,CVE-2013-7459,35015
https://github.com/diogo-fernan/malsub,github.com,/diogo-fernan/malsub,requests==2.12.5,requests,2.12.5,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/dirtbags/pcapdb,github.com,/dirtbags/pcapdb,Django==1.9,django,1.9,">=1.9,<1.9.10","The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",CVE-2016-7401,25718
https://github.com/dirtbags/pcapdb,github.com,/dirtbags/pcapdb,Django==1.9,django,1.9,">=1.9,<1.9.11","Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",CVE-2016-9014,33075
https://github.com/dirtbags/pcapdb,github.com,/dirtbags/pcapdb,Django==1.9,django,1.9,">=1.9,<1.9.11","Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",CVE-2016-9013,33076
https://github.com/dirtbags/pcapdb,github.com,/dirtbags/pcapdb,Django==1.9,django,1.9,">=1.9,<1.9.11","Django 1.9.11 fixes two security issues in 1.9.10.

User with hardcoded password created when running tests on Oracle
=================================================================

When running tests with an Oracle database, Django creates a temporary database
user. In older versions, if a password isn't manually specified in the database
settings ``TEST`` dictionary, a hardcoded password is used. This could allow
an attacker with network access to the database server to connect.

This user is usually dropped after the test suite completes, but not when using
the ``manage.py test --keepdb`` option or if the user has an active session
(such as an attacker's connection).

A randomly generated password is now used for each test run.

DNS rebinding vulnerability when ``DEBUG=True``
===============================================",,25734
https://github.com/dirtbags/pcapdb,github.com,/dirtbags/pcapdb,Django==1.9,django,1.9,">=1.9,<1.9.13","Django 1.9.13 fixes two security issues and a bug in 1.9.12. This is the final
release of the 1.9.x series.

CVE-2017-7233: Open redirect and possible XSS attack via user-supplied numeric redirect URLs
============================================================================================

Django relies on user input in some cases  (e.g.
:func:`django.contrib.auth.views.login` and :doc:`i18n </topics/i18n/index>`)
to redirect the user to an ""on success"" URL. The security check for these
redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric
URLs (e.g. ``http:999999999``) ""safe"" when they shouldn't be.

Also, if a developer relies on ``is_safe_url()`` to provide safe redirect
targets and puts such a URL into a link, they could suffer from an XSS attack.

CVE-2017-7234: Open redirect vulnerability in ``django.views.static.serve()``
=============================================================================

A maliciously crafted URL to a Django site using the
:func:`~django.views.static.serve` view could redirect to any other domain. The
view no longer does any redirects as they don't provide any known, useful
functionality.

Note, however, that this view has always carried a warning that it is not
hardened for production use and should be used only as a development aid.",,33302
https://github.com/dirtbags/pcapdb,github.com,/dirtbags/pcapdb,Django==1.9,django,1.9,">=1.9,<1.9.2","Django 1.9.x before 1.9.2, when ModelAdmin.save_as is set to True, allows remote authenticated users to bypass intended access restrictions and create ModelAdmin objects via the ""Save as New"" option when editing objects and leveraging the ""change"" permission.",CVE-2016-2048,25735
https://github.com/dirtbags/pcapdb,github.com,/dirtbags/pcapdb,Django==1.9,django,1.9,">=1.9,<1.9.3",The password hasher in contrib/auth/hashers.py in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to enumerate users via a timing attack involving login requests.,CVE-2016-2513,33074
https://github.com/dirtbags/pcapdb,github.com,/dirtbags/pcapdb,Django==1.9,django,1.9,">=1.9,<1.9.3","The utils.http.is_safe_url function in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks or possibly conduct cross-site scripting (XSS) attacks via a URL containing basic authentication, as demonstrated by http://mysite.example.com\@attacker.com.",CVE-2016-2512,33073
https://github.com/dirtbags/pcapdb,github.com,/dirtbags/pcapdb,Django==1.9,django,1.9,">=1.9,<1.9.8","Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",CVE-2016-6186,25721
https://github.com/dropbox/securitybot,github.com,/dropbox/securitybot,requests==2.11.1,requests,2.11.1,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/dunbarcyber/cyphon,github.com,/dunbarcyber/cyphon,"Django==1.11.15  # pyup: >=1.0.0,<2.0.0",django,1.11.15,"<1.11.19,>=1.11.0",Django 1.11.x before 1.11.19 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.,CVE-2019-6975,36885
https://github.com/dunbarcyber/cyphon,github.com,/dunbarcyber/cyphon,"Django==1.11.15  # pyup: >=1.0.0,<2.0.0",django,1.11.15,"<1.11.22,>1.11","An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",CVE-2019-12781,37261
https://github.com/ecthros/uncaptcha,github.com,/ecthros/uncaptcha,requests==2.10.0,requests,2.10.0,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/ekultek/zeus-scanner,github.com,/ekultek/zeus-scanner,requests==2.12.2,requests,2.12.2,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/esecuritylab/kostebek,github.com,/esecuritylab/kostebek,requests==2.18.4,requests,2.18.4,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/esecuritylab/kostebek,github.com,/esecuritylab/kostebek,urllib3==1.22,urllib3,1.22,<1.23,"urllib3 before 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.",CVE-2018-20060,36541
https://github.com/eth0izzle/Needl,github.com,/eth0izzle/Needl,requests==2.11.1,requests,2.11.1,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/eth0izzle/Needl,github.com,/eth0izzle/Needl,urllib3==1.22,urllib3,1.22,<1.23,"urllib3 before 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.",CVE-2018-20060,36541
https://github.com/eth0izzle/bucket-stream,github.com,/eth0izzle/bucket-stream,requests==2.18.4,requests,2.18.4,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/eth0izzle/bucket-stream,github.com,/eth0izzle/bucket-stream,urllib3==1.22,urllib3,1.22,<1.23,"urllib3 before 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.",CVE-2018-20060,36541
https://github.com/famavott/osint-scraper,github.com,/famavott/osint-scraper,cryptography==2.1.3,cryptography,2.1.3,">=1.9.0,<2.3",python-cryptography versions >=1.9.0 and <2.3 did not enforce a minimum tag length for finalize_with_tag API. If a user did not validate the input length prior to passing it to finalize_with_tag an attacker could craft an invalid payload with a shortened tag (e.g. 1 byte) such that they would have a 1 in 256 chance of passing the MAC check. GCM tag forgeries can cause key leakage.,CVE-2018-10903,36351
https://github.com/famavott/osint-scraper,github.com,/famavott/osint-scraper,pyOpenSSL==17.3.0,pyopenssl,17.3.0,<17.5.0,Python Cryptographic Authority pyopenssl version prior to version 17.5.0 contains a CWE-416: Use After Free vulnerability in X509 object handling that can result in Use after free can lead to possible denial of service or remote code execution.. This attack appear to be exploitable via Depends on the calling application and if it retains a reference to the memory.. This vulnerability appears to have been fixed in 17.5.0.,CVE-2018-1000807,36533
https://github.com/famavott/osint-scraper,github.com,/famavott/osint-scraper,pyOpenSSL==17.3.0,pyopenssl,17.3.0,<17.5.0,Python Cryptographic Authority pyopenssl version Before 17.5.0 contains a CWE - 401 : Failure to Release Memory Before Removing Last Reference vulnerability in PKCS #12 Store that can result in Denial of service if memory runs low or is exhausted.,CVE-2018-1000808,36534
https://github.com/famavott/osint-scraper,github.com,/famavott/osint-scraper,requests==2.18.4,requests,2.18.4,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/famavott/osint-scraper,github.com,/famavott/osint-scraper,urllib3==1.22,urllib3,1.22,<1.23,"urllib3 before 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.",CVE-2018-20060,36541
https://github.com/ghirensics/ghiro,github.com,/ghirensics/ghiro,Django==1.9.7,django,1.9.7,">=1.9,<1.9.10","The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",CVE-2016-7401,25718
https://github.com/ghirensics/ghiro,github.com,/ghirensics/ghiro,Django==1.9.7,django,1.9.7,">=1.9,<1.9.11","Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",CVE-2016-9014,33075
https://github.com/ghirensics/ghiro,github.com,/ghirensics/ghiro,Django==1.9.7,django,1.9.7,">=1.9,<1.9.11","Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",CVE-2016-9013,33076
https://github.com/ghirensics/ghiro,github.com,/ghirensics/ghiro,Django==1.9.7,django,1.9.7,">=1.9,<1.9.11","Django 1.9.11 fixes two security issues in 1.9.10.

User with hardcoded password created when running tests on Oracle
=================================================================

When running tests with an Oracle database, Django creates a temporary database
user. In older versions, if a password isn't manually specified in the database
settings ``TEST`` dictionary, a hardcoded password is used. This could allow
an attacker with network access to the database server to connect.

This user is usually dropped after the test suite completes, but not when using
the ``manage.py test --keepdb`` option or if the user has an active session
(such as an attacker's connection).

A randomly generated password is now used for each test run.

DNS rebinding vulnerability when ``DEBUG=True``
===============================================",,25734
https://github.com/ghirensics/ghiro,github.com,/ghirensics/ghiro,Django==1.9.7,django,1.9.7,">=1.9,<1.9.13","Django 1.9.13 fixes two security issues and a bug in 1.9.12. This is the final
release of the 1.9.x series.

CVE-2017-7233: Open redirect and possible XSS attack via user-supplied numeric redirect URLs
============================================================================================

Django relies on user input in some cases  (e.g.
:func:`django.contrib.auth.views.login` and :doc:`i18n </topics/i18n/index>`)
to redirect the user to an ""on success"" URL. The security check for these
redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric
URLs (e.g. ``http:999999999``) ""safe"" when they shouldn't be.

Also, if a developer relies on ``is_safe_url()`` to provide safe redirect
targets and puts such a URL into a link, they could suffer from an XSS attack.

CVE-2017-7234: Open redirect vulnerability in ``django.views.static.serve()``
=============================================================================

A maliciously crafted URL to a Django site using the
:func:`~django.views.static.serve` view could redirect to any other domain. The
view no longer does any redirects as they don't provide any known, useful
functionality.

Note, however, that this view has always carried a warning that it is not
hardened for production use and should be used only as a development aid.",,33302
https://github.com/ghirensics/ghiro,github.com,/ghirensics/ghiro,Django==1.9.7,django,1.9.7,">=1.9,<1.9.8","Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",CVE-2016-6186,25721
https://github.com/ghirensics/ghiro,github.com,/ghirensics/ghiro,Pillow==3.2.0,pillow,3.2.0,<3.3.2,"Pillow before 3.3.2 allows context-dependent attackers to execute arbitrary code by using the ""crafted image file"" approach, related to an ""Insecure Sign Extension"" issue affecting the ImagingNew in Storage.c component.",CVE-2016-9190,33138
https://github.com/ghirensics/ghiro,github.com,/ghirensics/ghiro,Pillow==3.2.0,pillow,3.2.0,<3.3.2,"Pillow before 3.3.2 allows context-dependent attackers to obtain sensitive information by using the ""crafted image file"" approach, related to an ""Integer Overflow"" issue affecting the Image.core.map_buffer in map.c component.",CVE-2016-9189,33139
https://github.com/ghirensics/ghiro,github.com,/ghirensics/ghiro,requests==2.10.0,requests,2.10.0,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/hatRiot/zarp,github.com,/hatRiot/zarp,Flask==0.10.1,flask,0.10.1,<0.12.3,flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3.,CVE-2018-1000656,36388
https://github.com/hisxo/gitGraber,github.com,/hisxo/gitGraber,requests==2.18.4,requests,2.18.4,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/hubert3/iSniff-GPS,github.com,/hubert3/iSniff-GPS,django==1.7.1,django,1.7.1,<1.7.11,"The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",CVE-2015-8213,25714
https://github.com/hubert3/iSniff-GPS,github.com,/hubert3/iSniff-GPS,django==1.7.1,django,1.7.1,<1.7.6,"Cross-site scripting (XSS) vulnerability in the contents function in admin/helpers.py in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in ModelAdmin.readonly_fields, as demonstrated by a @property.",CVE-2015-2241,25715
https://github.com/hubert3/iSniff-GPS,github.com,/hubert3/iSniff-GPS,django==1.7.1,django,1.7.1,<1.8.10,The password hasher in contrib/auth/hashers.py in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to enumerate users via a timing attack involving login requests.,CVE-2016-2513,33074
https://github.com/hubert3/iSniff-GPS,github.com,/hubert3/iSniff-GPS,django==1.7.1,django,1.7.1,<1.8.10,"The utils.http.is_safe_url function in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks or possibly conduct cross-site scripting (XSS) attacks via a URL containing basic authentication, as demonstrated by http://mysite.example.com\@attacker.com.",CVE-2016-2512,33073
https://github.com/hubert3/iSniff-GPS,github.com,/hubert3/iSniff-GPS,django==1.7.1,django,1.7.1,<1.8.15,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",CVE-2016-7401,25718
https://github.com/hubert3/iSniff-GPS,github.com,/hubert3/iSniff-GPS,django==1.7.1,django,1.7.1,">=1.7,<1.7.10","The (1) contrib.sessions.backends.base.SessionBase.flush and (2) cache_db.SessionStore.flush functions in Django 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions create empty sessions in certain circumstances, which allows remote attackers to cause a denial of service (session store consumption) via unspecified vectors.",CVE-2015-5964,25728
https://github.com/hubert3/iSniff-GPS,github.com,/hubert3/iSniff-GPS,django==1.7.1,django,1.7.1,">=1.7,<1.7.10","contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",CVE-2015-5963,25727
https://github.com/hubert3/iSniff-GPS,github.com,/hubert3/iSniff-GPS,django==1.7.1,django,1.7.1,">=1.7,<1.7.3","The django.util.http.is_safe_url function in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 does not properly handle leading whitespaces, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL, related to redirect URLs, as demonstrated by a ""\njavascript:"" URL.",CVE-2015-0220,33071
https://github.com/hubert3/iSniff-GPS,github.com,/hubert3/iSniff-GPS,django==1.7.1,django,1.7.1,">=1.7,<1.7.3","The django.views.static.serve view in Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 reads files an entire line at a time, which allows remote attackers to cause a denial of service (memory consumption) via a long line in a file.",CVE-2015-0221,33072
https://github.com/hubert3/iSniff-GPS,github.com,/hubert3/iSniff-GPS,django==1.7.1,django,1.7.1,">=1.7,<1.7.3","Django before 1.4.18, 1.6.x before 1.6.10, and 1.7.x before 1.7.3 allows remote attackers to spoof WSGI headers by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X-Auth_User header.",CVE-2015-0219,33070
https://github.com/hubert3/iSniff-GPS,github.com,/hubert3/iSniff-GPS,django==1.7.1,django,1.7.1,">=1.7,<1.7.3","ModelMultipleChoiceField in Django 1.6.x before 1.6.10 and 1.7.x before 1.7.3, when show_hidden_initial is set to True, allows remote attackers to cause a denial of service by submitting duplicate values, which triggers a large number of SQL queries.",CVE-2015-0222,25730
https://github.com/hubert3/iSniff-GPS,github.com,/hubert3/iSniff-GPS,django==1.7.1,django,1.7.1,">=1.7,<1.7.7","The utils.html.strip_tags function in Django 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1, when using certain versions of Python, allows remote attackers to cause a denial of service (infinite loop) by increasing the length of the input string.",CVE-2015-2316,25731
https://github.com/hubert3/iSniff-GPS,github.com,/hubert3/iSniff-GPS,django==1.7.1,django,1.7.1,">=1.7,<1.7.7","The utils.http.is_safe_url function in Django before 1.4.20, 1.5.x, 1.6.x before 1.6.11, 1.7.x before 1.7.7, and 1.8.x before 1.8c1 does not properly validate URLs, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a control character in a URL, as demonstrated by a \x08javascript: URL.",CVE-2015-2317,25713
https://github.com/hubert3/iSniff-GPS,github.com,/hubert3/iSniff-GPS,django==1.7.1,django,1.7.1,">=1.7,<1.7.9","The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",CVE-2015-5143,25725
https://github.com/hubert3/iSniff-GPS,github.com,/hubert3/iSniff-GPS,django==1.7.1,django,1.7.1,">=1.7,<1.7.9","Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.",CVE-2015-5144,25726
https://github.com/idanr1986/cuckoodroid-2.0,github.com,/idanr1986/cuckoodroid-2.0,cryptography==1.3.2,cryptography,1.3.2,<1.5.3,HKDF in cryptography before 1.5.2 returns an empty byte-string if used with a length less than algorithm.digest_size.,CVE-2016-9243,25680
https://github.com/idanr1986/cuckoodroid-2.0,github.com,/idanr1986/cuckoodroid-2.0,Django==1.8.4,django,1.8.4,<1.8.10,The password hasher in contrib/auth/hashers.py in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to enumerate users via a timing attack involving login requests.,CVE-2016-2513,33074
https://github.com/idanr1986/cuckoodroid-2.0,github.com,/idanr1986/cuckoodroid-2.0,Django==1.8.4,django,1.8.4,<1.8.10,"The utils.http.is_safe_url function in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks or possibly conduct cross-site scripting (XSS) attacks via a URL containing basic authentication, as demonstrated by http://mysite.example.com\@attacker.com.",CVE-2016-2512,33073
https://github.com/idanr1986/cuckoodroid-2.0,github.com,/idanr1986/cuckoodroid-2.0,Django==1.8.4,django,1.8.4,<1.8.15,"The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",CVE-2016-7401,25718
https://github.com/idanr1986/cuckoodroid-2.0,github.com,/idanr1986/cuckoodroid-2.0,Django==1.8.4,django,1.8.4,">=1.8,<1.8.16","Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",CVE-2016-9014,33075
https://github.com/idanr1986/cuckoodroid-2.0,github.com,/idanr1986/cuckoodroid-2.0,Django==1.8.4,django,1.8.4,">=1.8,<1.8.16","Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",CVE-2016-9013,33076
https://github.com/idanr1986/cuckoodroid-2.0,github.com,/idanr1986/cuckoodroid-2.0,Django==1.8.4,django,1.8.4,">=1.8,<1.8.18","Django 1.8.18 fixes two security issues in 1.8.17.

CVE-2017-7233: Open redirect and possible XSS attack via user-supplied numeric redirect URLs
============================================================================================

Django relies on user input in some cases  (e.g.
:func:`django.contrib.auth.views.login` and :doc:`i18n </topics/i18n/index>`)
to redirect the user to an ""on success"" URL. The security check for these
redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric
URLs (e.g. ``http:999999999``) ""safe"" when they shouldn't be.

Also, if a developer relies on ``is_safe_url()`` to provide safe redirect
targets and puts such a URL into a link, they could suffer from an XSS attack.

CVE-2017-7234: Open redirect vulnerability in ``django.views.static.serve()``
=============================================================================

A maliciously crafted URL to a Django site using the
:func:`~django.views.static.serve` view could redirect to any other domain. The
view no longer does any redirects as they don't provide any known, useful
functionality.

Note, however, that this view has always carried a warning that it is not
hardened for production use and should be used only as a development aid.",,33301
https://github.com/idanr1986/cuckoodroid-2.0,github.com,/idanr1986/cuckoodroid-2.0,Django==1.8.4,django,1.8.4,">=1.8,<1.8.19","The ``django.utils.html.urlize()`` function was extremely slow to evaluate
certain inputs due to a catastrophic backtracking vulnerability in a regular
expression. The ``urlize()`` function is used to implement the ``urlize`` and
``urlizetrunc`` template filters, which were thus vulnerable.

The problematic regular expression is replaced with parsing logic that behaves
similarly.",CVE-2018-7536,35797
https://github.com/idanr1986/cuckoodroid-2.0,github.com,/idanr1986/cuckoodroid-2.0,Django==1.8.4,django,1.8.4,">=1.8,<1.8.19","If ``django.utils.text.Truncator``'s ``chars()`` and ``words()`` methods were
passed the ``html=True`` argument, they were extremely slow to evaluate certain
inputs due to a catastrophic backtracking vulnerability in a regular
expression. The ``chars()`` and ``words()`` methods are used to implement the
``truncatechars_html`` and ``truncatewords_html`` template filters, which were
thus vulnerable.",CVE-2018-7537,35796
https://github.com/idanr1986/cuckoodroid-2.0,github.com,/idanr1986/cuckoodroid-2.0,Django==1.8.4,django,1.8.4,">=1.8,<1.8.7","The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",CVE-2015-8213,25714
https://github.com/idanr1986/cuckoodroid-2.0,github.com,/idanr1986/cuckoodroid-2.0,Flask==0.10.1,flask,0.10.1,<0.12.3,flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3.,CVE-2018-1000656,36388
https://github.com/idanr1986/cuckoodroid-2.0,github.com,/idanr1986/cuckoodroid-2.0,requests==2.7.0,requests,2.7.0,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/idanr1986/cuckoodroid-2.0,github.com,/idanr1986/cuckoodroid-2.0,Werkzeug==0.10.4,werkzeug,0.10.4,<0.11.11,Cross-site scripting (XSS) vulnerability in the render_full function in debug/tbtools.py in the debugger in Pallets Werkzeug before 0.11.11 (as used in Pallets Flask and other products) allows remote attackers to inject arbitrary web script or HTML via a field that contains an exception message.,CVE-2016-10516,35661
https://github.com/linkedin/qark,github.com,/linkedin/qark,cryptography==2.2.1 \,cryptography,2.2.1,">=1.9.0,<2.3",python-cryptography versions >=1.9.0 and <2.3 did not enforce a minimum tag length for finalize_with_tag API. If a user did not validate the input length prior to passing it to finalize_with_tag an attacker could craft an invalid payload with a shortened tag (e.g. 1 byte) such that they would have a 1 in 256 chance of passing the MAC check. GCM tag forgeries can cause key leakage.,CVE-2018-10903,36351
https://github.com/linkedin/qark,github.com,/linkedin/qark,requests[security]==2.18.4 \,requests,2.18.4,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/linkedin/qark,github.com,/linkedin/qark,urllib3==1.22 \,urllib3,1.22,<1.23,"urllib3 before 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.",CVE-2018-20060,36541
https://github.com/llt4l/iCULeak.py,github.com,/llt4l/iCULeak.py,requests==2.19.1,requests,2.19.1,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/mehulj94/Radium-Keylogger,github.com,/mehulj94/Radium-Keylogger,pycrypto==2.6.1,pycrypto,2.6.1,<=2.6.1,Heap-based buffer overflow in the ALGnew function in block_templace.c in Python Cryptography Toolkit (aka pycrypto) 2.6.1 allows remote attackers to execute arbitrary code as demonstrated by a crafted iv parameter to cryptmsg.py.,CVE-2013-7459,35015
https://github.com/mozilla/MozDef,github.com,/mozilla/MozDef,bottle==0.12.4,bottle,0.12.4,<0.12.10,"redirect() in bottle.py in bottle 0.12.10 doesn't filter a ""\r\n"" sequence, which leads to a CRLF attack, as demonstrated by a redirect(""233\r\nSet-Cookie: name=salt"") call.",CVE-2016-9964,25642
https://github.com/mozilla/MozDef,github.com,/mozilla/MozDef,bottle==0.12.4,bottle,0.12.4,">=0.12,<0.12.6","Bottle 0.10.x before 0.10.12, 0.11.x before 0.11.7, and 0.12.x before 0.12.6 does not properly limit content types, which allows remote attackers to bypass intended access restrictions via an accepted Content-Type followed by a ; (semi-colon) and a Content-Type that would not be accepted, as demonstrated in YouCompleteMe to execute arbitrary code.",CVE-2014-3137,35548
https://github.com/mozilla/MozDef,github.com,/mozilla/MozDef,rsa==3.1.4,rsa,3.1.4,<3.3,"The verify function in the RSA package for Python (Python-RSA) before 3.3 allows attackers to spoof signatures with a small public exponent via crafted signature padding, aka a BERserk attack.",CVE-2016-1494,33164
https://github.com/mozilla/MozDef,github.com,/mozilla/MozDef,rsa==3.1.4,rsa,3.1.4,<3.4,rsa before 3.4 has a undisclosed side-channel vulnerability.,,26112
https://github.com/mthbernardes/ARTLAS,github.com,/mthbernardes/ARTLAS,requests==2.10.0,requests,2.10.0,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/mthbernardes/ARTLAS,github.com,/mthbernardes/ARTLAS,urllib3==1.15.1,urllib3,1.15.1,<1.23,"urllib3 before 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.",CVE-2018-20060,36541
https://github.com/n4xh4ck5/CMSsc4n,github.com,/n4xh4ck5/CMSsc4n,requests==2.10.0,requests,2.10.0,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/n4xh4ck5/N4xD0rk,github.com,/n4xh4ck5/N4xD0rk,Python==2.7,python,2.7,<2.7.12,"The smtplib library in CPython (aka Python) before 2.7.12, 3.x before 3.4.5, and 3.5.x before 3.5.2 does not return an error when StartTLS fails, which might allow man-in-the-middle attackers to bypass the TLS protections by leveraging a network position between the client and the registry to block the StartTLS command, aka a ""StartTLS stripping attack.""",CVE-2016-0772,33154
https://github.com/n4xh4ck5/N4xD0rk,github.com,/n4xh4ck5/N4xD0rk,Python==2.7,python,2.7,<2.7.12,"Integer overflow in the get_data function in zipimport.c in CPython (aka Python) before 2.7.12, 3.x before 3.4.5, and 3.5.x before 3.5.2 allows remote attackers to have unspecified impact via a negative data size value, which triggers a heap-based buffer overflow.",CVE-2016-5636,33155
https://github.com/n4xh4ck5/N4xD0rk,github.com,/n4xh4ck5/N4xD0rk,Python==2.7,python,2.7,">=2.6,<3.3","Python 2.6 through 3.2 creates ~/.pypirc with world-readable permissions before changing them after data has been written, which introduces a race condition that allows local users to obtain a username and password by reading this file.",CVE-2011-4944,26074
https://github.com/n4xh4ck5/N4xD0rk,github.com,/n4xh4ck5/N4xD0rk,Python==2.7,python,2.7,">=2.7,<2.7.2","The list_directory function in Lib/SimpleHTTPServer.py in SimpleHTTPServer in Python before 2.5.6c1, 2.6.x before 2.6.7 rc2, and 2.7.x before 2.7.2 does not place a charset parameter in the Content-Type HTTP header, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks against Internet Explorer 7 via UTF-7 encoding.",CVE-2011-4940,26069
https://github.com/n4xh4ck5/N4xD0rk,github.com,/n4xh4ck5/N4xD0rk,Python==2.7,python,2.7,">=2.7,<2.7.2","The urllib and urllib2 modules in Python 2.x before 2.7.2 and 3.x before 3.2.1 process Location headers that specify redirection to file: URLs, which makes it easier for remote attackers to obtain sensitive information or cause a denial of service (resource consumption) via a crafted URL, as demonstrated by the file:///etc/passwd and file:///dev/zero URLs.",CVE-2011-1521,26075
https://github.com/n4xh4ck5/N4xD0rk,github.com,/n4xh4ck5/N4xD0rk,Python==2.7,python,2.7,">=2.7,<2.7.3","Python before 2.6.8, 2.7.x before 2.7.3, 3.x before 3.1.5, and 3.2.x before 3.2.3 computes hash values without restricting the ability to trigger hash collisions predictably, which allows context-dependent attackers to cause a denial of service (CPU consumption) via crafted input to an application that maintains a hash table.",CVE-2012-1150,26071
https://github.com/n4xh4ck5/N4xD0rk,github.com,/n4xh4ck5/N4xD0rk,Python==2.7,python,2.7,">=2.7,<2.7.3","SimpleXMLRPCServer.py in SimpleXMLRPCServer in Python before 2.6.8, 2.7.x before 2.7.3, 3.x before 3.1.5, and 3.2.x before 3.2.3 allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via an XML-RPC POST request that contains a smaller amount of data than specified by the Content-Length header.",CVE-2012-0845,26070
https://github.com/n4xh4ck5/N4xD0rk,github.com,/n4xh4ck5/N4xD0rk,requests==2.10.0,requests,2.10.0,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/n4xh4ck5/RastLeak,github.com,/n4xh4ck5/RastLeak,requests==2.10.0,requests,2.10.0,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/n4xh4ck5/RastLeak,github.com,/n4xh4ck5/RastLeak,Python==2.7,python,2.7,<2.7.12,"The smtplib library in CPython (aka Python) before 2.7.12, 3.x before 3.4.5, and 3.5.x before 3.5.2 does not return an error when StartTLS fails, which might allow man-in-the-middle attackers to bypass the TLS protections by leveraging a network position between the client and the registry to block the StartTLS command, aka a ""StartTLS stripping attack.""",CVE-2016-0772,33154
https://github.com/n4xh4ck5/RastLeak,github.com,/n4xh4ck5/RastLeak,Python==2.7,python,2.7,<2.7.12,"Integer overflow in the get_data function in zipimport.c in CPython (aka Python) before 2.7.12, 3.x before 3.4.5, and 3.5.x before 3.5.2 allows remote attackers to have unspecified impact via a negative data size value, which triggers a heap-based buffer overflow.",CVE-2016-5636,33155
https://github.com/n4xh4ck5/RastLeak,github.com,/n4xh4ck5/RastLeak,Python==2.7,python,2.7,">=2.6,<3.3","Python 2.6 through 3.2 creates ~/.pypirc with world-readable permissions before changing them after data has been written, which introduces a race condition that allows local users to obtain a username and password by reading this file.",CVE-2011-4944,26074
https://github.com/n4xh4ck5/RastLeak,github.com,/n4xh4ck5/RastLeak,Python==2.7,python,2.7,">=2.7,<2.7.2","The list_directory function in Lib/SimpleHTTPServer.py in SimpleHTTPServer in Python before 2.5.6c1, 2.6.x before 2.6.7 rc2, and 2.7.x before 2.7.2 does not place a charset parameter in the Content-Type HTTP header, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks against Internet Explorer 7 via UTF-7 encoding.",CVE-2011-4940,26069
https://github.com/n4xh4ck5/RastLeak,github.com,/n4xh4ck5/RastLeak,Python==2.7,python,2.7,">=2.7,<2.7.2","The urllib and urllib2 modules in Python 2.x before 2.7.2 and 3.x before 3.2.1 process Location headers that specify redirection to file: URLs, which makes it easier for remote attackers to obtain sensitive information or cause a denial of service (resource consumption) via a crafted URL, as demonstrated by the file:///etc/passwd and file:///dev/zero URLs.",CVE-2011-1521,26075
https://github.com/n4xh4ck5/RastLeak,github.com,/n4xh4ck5/RastLeak,Python==2.7,python,2.7,">=2.7,<2.7.3","Python before 2.6.8, 2.7.x before 2.7.3, 3.x before 3.1.5, and 3.2.x before 3.2.3 computes hash values without restricting the ability to trigger hash collisions predictably, which allows context-dependent attackers to cause a denial of service (CPU consumption) via crafted input to an application that maintains a hash table.",CVE-2012-1150,26071
https://github.com/n4xh4ck5/RastLeak,github.com,/n4xh4ck5/RastLeak,Python==2.7,python,2.7,">=2.7,<2.7.3","SimpleXMLRPCServer.py in SimpleXMLRPCServer in Python before 2.6.8, 2.7.x before 2.7.3, 3.x before 3.1.5, and 3.2.x before 3.2.3 allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via an XML-RPC POST request that contains a smaller amount of data than specified by the Content-Length header.",CVE-2012-0845,26070
https://github.com/omergunal/hackerbot,github.com,/omergunal/hackerbot,requests==2.5.3,requests,2.5.3,<2.6.0,requests 2.6.0 fixes handling of cookies on redirect. Previously a cookie without a host value set would use the hostname for the redirected URL exposing requests users to session fixation attacks and potentially cookie stealing.,,26102
https://github.com/omergunal/hackerbot,github.com,/omergunal/hackerbot,requests==2.5.3,requests,2.5.3,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/omergunal/hackerbot,github.com,/omergunal/hackerbot,requests==2.5.3,requests,2.5.3,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.,CVE-2015-2296,26103
https://github.com/omergunal/hackerbot,github.com,/omergunal/hackerbot,numpy==1.12.0,numpy,1.12.0,<=1.16.0,"An issue was discovered in NumPy 1.16.0 and earlier. It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.",CVE-2019-6446,36810
https://github.com/omergunal/twebit,github.com,/omergunal/twebit,numpy==1.14.0,numpy,1.14.0,<=1.16.0,"An issue was discovered in NumPy 1.16.0 and earlier. It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.",CVE-2019-6446,36810
https://github.com/payatu/Tiredful-API,github.com,/payatu/Tiredful-API,Django==1.11.7,django,1.11.7,"<1.11.19,>=1.11.0",Django 1.11.x before 1.11.19 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.,CVE-2019-6975,36885
https://github.com/payatu/Tiredful-API,github.com,/payatu/Tiredful-API,Django==1.11.7,django,1.11.7,"<1.11.22,>1.11","An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",CVE-2019-12781,37261
https://github.com/payatu/Tiredful-API,github.com,/payatu/Tiredful-API,Django==1.11.7,django,1.11.7,">=1.11,<1.11.11","The ``django.utils.html.urlize()`` function was extremely slow to evaluate
certain inputs due to a catastrophic backtracking vulnerability in a regular
expression. The ``urlize()`` function is used to implement the ``urlize`` and
``urlizetrunc`` template filters, which were thus vulnerable.

The problematic regular expression is replaced with parsing logic that behaves
similarly.",CVE-2018-7536,35797
https://github.com/payatu/Tiredful-API,github.com,/payatu/Tiredful-API,Django==1.11.7,django,1.11.7,">=1.11,<1.11.11","If ``django.utils.text.Truncator``'s ``chars()`` and ``words()`` methods were
passed the ``html=True`` argument, they were extremely slow to evaluate certain
inputs due to a catastrophic backtracking vulnerability in a regular
expression. The ``chars()`` and ``words()`` methods are used to implement the
``truncatechars_html`` and ``truncatewords_html`` template filters, which were
thus vulnerable.",CVE-2018-7537,35796
https://github.com/payatu/Tiredful-API,github.com,/payatu/Tiredful-API,Django==1.11.7,django,1.11.7,">=1.11.0, <1.11.15",django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect. A remote user can redirect the target user's browser to an arbitrary site.,CVE-2018-14574,36368
https://github.com/rfunix/Pompem,github.com,/rfunix/Pompem,requests==2.9.1,requests,2.9.1,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/samhaxr/hackbox,github.com,/samhaxr/hackbox,requests==2.19.1,requests,2.19.1,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/saurabhmathur96/clickbait-detector,github.com,/saurabhmathur96/clickbait-detector,Flask==0.12,flask,0.12,<0.12.3,flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3.,CVE-2018-1000656,36388
https://github.com/saurabhmathur96/clickbait-detector,github.com,/saurabhmathur96/clickbait-detector,numpy==1.11.1,numpy,1.11.1,<=1.16.0,"An issue was discovered in NumPy 1.16.0 and earlier. It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.",CVE-2019-6446,36810
https://github.com/saurabhmathur96/clickbait-detector,github.com,/saurabhmathur96/clickbait-detector,tensorflow==0.12.1,tensorflow,0.12.1,<1.10.0,tensorflow before 1.10.0 uses an insecure grpc dependency.,,36375
https://github.com/sdnewhop/sdwan-harvester,github.com,/sdnewhop/sdwan-harvester,numpy==1.15.4,numpy,1.15.4,<=1.16.0,"An issue was discovered in NumPy 1.16.0 and earlier. It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.",CVE-2019-6446,36810
https://github.com/securityclippy/elasticintel,github.com,/securityclippy/elasticintel,requests==2.19.1,requests,2.19.1,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/sevagas/macro_pack,github.com,/sevagas/macro_pack,Flask==0.12.2,flask,0.12.2,<0.12.3,flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3.,CVE-2018-1000656,36388
https://github.com/sweetsoftware/Ares,github.com,/sweetsoftware/Ares,Flask==0.12.2,flask,0.12.2,<0.12.3,flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3.,CVE-2018-1000656,36388
https://github.com/sweetsoftware/Ares,github.com,/sweetsoftware/Ares,requests==2.18.4,requests,2.18.4,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/sweetsoftware/Ares,github.com,/sweetsoftware/Ares,urllib3==1.22,urllib3,1.22,<1.23,"urllib3 before 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.",CVE-2018-20060,36541
https://github.com/swisskyrepo/Wordpresscan,github.com,/swisskyrepo/Wordpresscan,requests==2.18.4,requests,2.18.4,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/swisskyrepo/Wordpresscan,github.com,/swisskyrepo/Wordpresscan,urllib3==1.22,urllib3,1.22,<1.23,"urllib3 before 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.",CVE-2018-20060,36541
https://github.com/tomchop/malcom,github.com,/tomchop/malcom,Flask==0.10.1,flask,0.10.1,<0.12.3,flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3.,CVE-2018-1000656,36388
https://github.com/tomchop/malcom,github.com,/tomchop/malcom,Werkzeug==0.10.1,werkzeug,0.10.1,<0.11.11,Cross-site scripting (XSS) vulnerability in the render_full function in debug/tbtools.py in the debugger in Pallets Werkzeug before 0.11.11 (as used in Pallets Flask and other products) allows remote attackers to inject arbitrary web script or HTML via a field that contains an exception message.,CVE-2016-10516,35661
https://github.com/tomchop/malcom,github.com,/tomchop/malcom,cryptography==0.7.2,cryptography,0.7.2,<0.9.1,cryptography 0.9.1 fixes a double free in the OpenSSL backend when using DSA  to verify signatures. Note that this only affects PyPy 2.6.0 and (presently unreleased) CFFI versions greater than 1.1.0.,,25678
https://github.com/tomchop/malcom,github.com,/tomchop/malcom,cryptography==0.7.2,cryptography,0.7.2,<1.0.2,"The OpenSSL backend prior to 1.0.2 made extensive use  of assertions to check response codes where our tests could not trigger a  failure.  However, when Python is run with ``-O`` these asserts are optimized  away.  If a user ran Python with this flag and got an invalid response code  this could result in undefined behavior or worse. Accordingly, all response  checks from the OpenSSL backend have been converted from ``assert``  to a true function call. Credit **Emilia Käsper (Google Security Team)**  for the report.",,25679
https://github.com/tomchop/malcom,github.com,/tomchop/malcom,cryptography==0.7.2,cryptography,0.7.2,<1.5.3,HKDF in cryptography before 1.5.2 returns an empty byte-string if used with a length less than algorithm.digest_size.,CVE-2016-9243,25680
https://github.com/tomchop/malcom,github.com,/tomchop/malcom,gevent==1.0.1,gevent,1.0.1,<1.2a1,gevent 1.2a1 includes a security related fix. Errors logged by :class:`~gevent.pywsgi.WSGIHandler` no longer print the entire WSGI environment by default. This avoids  possible information disclosure vulnerabilities. Applications can also opt-in to a higher security level for the WSGI environment if they  choose and their frameworks support it. Originally reported  in :pr:`779` by sean-peters-au and changed in :pr:`781`.,,25837
https://github.com/tomchop/malcom,github.com,/tomchop/malcom,maxminddb==1.1.1,maxminddb,1.1.1,<1.1.2,"maxminddb 1.1.2 includes a number of important security fixes. Among these fixes is improved validation of the database metadata. Unfortunately,  MaxMind GeoIP2 and GeoLite2 databases created earlier than January 28, 2014  had an invalid data type for the `record_size` in the metadata. Previously these databases worked on little endian machines with libmaxminddb but did not work on big endian machines. Due to increased safety checks when reading the file, these databases will no longer work on any platform. If you are using one of these databases, we recommend that you upgrade to the latest GeoLite2 or GeoIP2 database",,25887
https://github.com/tomchop/malcom,github.com,/tomchop/malcom,pyOpenSSL==0.14,pyopenssl,0.14,<17.5.0,Python Cryptographic Authority pyopenssl version prior to version 17.5.0 contains a CWE-416: Use After Free vulnerability in X509 object handling that can result in Use after free can lead to possible denial of service or remote code execution.. This attack appear to be exploitable via Depends on the calling application and if it retains a reference to the memory.. This vulnerability appears to have been fixed in 17.5.0.,CVE-2018-1000807,36533
https://github.com/tomchop/malcom,github.com,/tomchop/malcom,pyOpenSSL==0.14,pyopenssl,0.14,<17.5.0,Python Cryptographic Authority pyopenssl version Before 17.5.0 contains a CWE - 401 : Failure to Release Memory Before Removing Last Reference vulnerability in PKCS #12 Store that can result in Denial of service if memory runs low or is exhausted.,CVE-2018-1000808,36534
https://github.com/tomchop/malcom,github.com,/tomchop/malcom,pycrypto==2.6.1,pycrypto,2.6.1,<=2.6.1,Heap-based buffer overflow in the ALGnew function in block_templace.c in Python Cryptography Toolkit (aka pycrypto) 2.6.1 allows remote attackers to execute arbitrary code as demonstrated by a crafted iv parameter to cryptmsg.py.,CVE-2013-7459,35015
https://github.com/tomchop/malcom,github.com,/tomchop/malcom,requests==2.5.1,requests,2.5.1,<2.6.0,requests 2.6.0 fixes handling of cookies on redirect. Previously a cookie without a host value set would use the hostname for the redirected URL exposing requests users to session fixation attacks and potentially cookie stealing.,,26102
https://github.com/tomchop/malcom,github.com,/tomchop/malcom,requests==2.5.1,requests,2.5.1,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/tomchop/malcom,github.com,/tomchop/malcom,requests==2.5.1,requests,2.5.1,">=2.1,<=2.5.3",The resolve_redirects function in sessions.py in requests 2.1.0 through 2.5.3 allows remote attackers to conduct session fixation attacks via a cookie without a host value in a redirect.,CVE-2015-2296,26103
https://github.com/varchashva/LetsMapYourNetwork,github.com,/varchashva/LetsMapYourNetwork,Django==1.11.7,django,1.11.7,"<1.11.19,>=1.11.0",Django 1.11.x before 1.11.19 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.,CVE-2019-6975,36885
https://github.com/varchashva/LetsMapYourNetwork,github.com,/varchashva/LetsMapYourNetwork,Django==1.11.7,django,1.11.7,"<1.11.22,>1.11","An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",CVE-2019-12781,37261
https://github.com/varchashva/LetsMapYourNetwork,github.com,/varchashva/LetsMapYourNetwork,Django==1.11.7,django,1.11.7,">=1.11,<1.11.11","The ``django.utils.html.urlize()`` function was extremely slow to evaluate
certain inputs due to a catastrophic backtracking vulnerability in a regular
expression. The ``urlize()`` function is used to implement the ``urlize`` and
``urlizetrunc`` template filters, which were thus vulnerable.

The problematic regular expression is replaced with parsing logic that behaves
similarly.",CVE-2018-7536,35797
https://github.com/varchashva/LetsMapYourNetwork,github.com,/varchashva/LetsMapYourNetwork,Django==1.11.7,django,1.11.7,">=1.11,<1.11.11","If ``django.utils.text.Truncator``'s ``chars()`` and ``words()`` methods were
passed the ``html=True`` argument, they were extremely slow to evaluate certain
inputs due to a catastrophic backtracking vulnerability in a regular
expression. The ``chars()`` and ``words()`` methods are used to implement the
``truncatechars_html`` and ``truncatewords_html`` template filters, which were
thus vulnerable.",CVE-2018-7537,35796
https://github.com/varchashva/LetsMapYourNetwork,github.com,/varchashva/LetsMapYourNetwork,Django==1.11.7,django,1.11.7,">=1.11.0, <1.11.15",django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect. A remote user can redirect the target user's browser to an arbitrary site.,CVE-2018-14574,36368
https://github.com/viraintel/OWASP-Nettacker,github.com,/viraintel/OWASP-Nettacker,requests==2.19.1,requests,2.19.1,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/woj-ciech/pepe,github.com,/woj-ciech/pepe,requests==2.11.1,requests,2.11.1,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
https://github.com/x0rz/tweets_analyzer,github.com,/x0rz/tweets_analyzer,numpy==1.15.1,numpy,1.15.1,<=1.16.0,"An issue was discovered in NumPy 1.16.0 and earlier. It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call.",CVE-2019-6446,36810
https://github.com/x0rz/tweets_analyzer,github.com,/x0rz/tweets_analyzer,requests==2.19.1,requests,2.19.1,<=2.19.1,"The Requests package before 2.19.1 sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",CVE-2018-18074,36546
